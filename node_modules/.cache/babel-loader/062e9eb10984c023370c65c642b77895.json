{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\sns\\\\src\\\\Component\\\\StoryItem\\\\CommentList\\\\CommentItem\\\\CommentItem.js\";\nimport React from 'react';\nimport './CommentItem.css';\nimport { addCommentHeart, deleteComment, deleteCommentHeart, getCommentHeart, getStoryUserData } from \"../../../../services/DataService\";\nimport { withRouter } from \"react-router-dom\";\nimport { CommentWriting } from \"../../../CommentWriting/CommentWriting\";\n\nconst fn_dateTimeToFormatted = dt => {\n  let min = 60 * 1000;\n  let c = new Date();\n  let d = new Date(dt);\n  let minsAgo = Math.floor((c - d) / min);\n  let result = {\n    'raw': d.getFullYear() + '-' + (d.getMonth() + 1 > 9 ? '' : '0') + (d.getMonth() + 1) + '-' + (d.getDate() > 9 ? '' : '0') + d.getDate() + ' ' + (d.getHours() > 9 ? '' : '0') + d.getHours() + ':' + (d.getMinutes() > 9 ? '' : '0') + d.getMinutes() + ':' + (d.getSeconds() > 9 ? '' : '0') + d.getSeconds(),\n    'formatted': ''\n  };\n\n  if (minsAgo < 60) {\n    // 1시간 내\n    result.formatted = minsAgo + '분 전';\n  } else if (minsAgo < 60 * 24) {\n    // 하루 내\n    result.formatted = Math.floor(minsAgo / 60) + '시간 전';\n  } else {\n    // 하루 이상\n    result.formatted = Math.floor(minsAgo / 60 / 24) + '일 전';\n  }\n\n  return result;\n};\n\nclass CommentItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.commentHeartEvent = e => {\n      // console.log(e.target);\n      if (this.state.heartClass.length < 2) {\n        this.setState({\n          heartClass: \"heart_on\",\n          heartsCnt: this.state.heartsCnt + 1\n        });\n        e.target.innerHTML = \"좋아요 취소\";\n        let data = {\n          heartInfo: JSON.stringify({\n            userid: this.nowUserInfo.id,\n            heart: \"heart_on\"\n          }),\n          commentid: this.props.data.id\n        };\n        addCommentHeart(data, res => {// console.log(res);\n        });\n      } else {\n        this.setState({\n          heartClass: \"\",\n          heartsCnt: this.state.heartsCnt - 1\n        });\n        e.target.innerHTML = \"좋아요\";\n        let data = {\n          heartInfo: JSON.stringify({\n            userid: this.nowUserInfo.id,\n            heart: \"heart_on\"\n          }),\n          commentid: this.props.data.id\n        };\n        deleteCommentHeart(data, res => {// console.log(res);\n        });\n      }\n    };\n\n    this.loadCommentHeart = () => {\n      getCommentHeart(this.props.data.id, hData => {\n        // console.log(JSON.parse(hData.data[0]));\n        if (hData.data[0] !== \"\") {\n          if (Array.isArray(hData.data)) {\n            this.setState({\n              hearts: hData.data.map(v => JSON.parse(v))\n            });\n            console.log(this.state.hearts);\n            this.state.hearts.forEach((v, i) => {\n              if (v.userid === this.nowUserInfo.id) {\n                this.setState({\n                  heartClass: v.heart\n                });\n              }\n            });\n          } else {\n            this.setState({\n              hearts: JSON.parse(hData.data)\n            });\n            console.log(this.state.hearts);\n            this.state.hearts.forEach((v, i) => {\n              if (v.userid === this.nowUserInfo.id) {\n                this.setState({\n                  heartClass: this.state.hearts.heart\n                });\n              }\n            });\n          }\n\n          this.setState({\n            heartsCnt: this.state.hearts.length\n          });\n        }\n      });\n    };\n\n    this.onShowEditForm = () => {\n      this.setState({\n        isEditOn: this.state.isEditOn ? false : true\n      });\n      this.contents.current.innerHTML = unescape(this.props.data.contents);\n    };\n\n    this.onDeleteCommentEvent = () => {\n      console.log(this.props.data.id);\n      deleteComment(this.props.data.id, res => {\n        this.props.onUpdateComment(this.props.data.id, null);\n      });\n    };\n\n    this.state = {\n      posterInfo: null,\n      heartClass: \"\",\n      // heart_on\n      hearts: [],\n      heartsCnt: 0,\n      isEditOn: false\n    };\n    this.loadCommentHeart();\n    this.contents = React.createRef();\n    this.nowUserInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n  }\n\n  componentDidMount() {\n    this.contents.current.innerHTML = unescape(this.props.data.contents);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevState.state && this.state.hearts !== prevState.state.hearts) {\n      this.loadCommentHeart();\n    }\n  }\n\n  render() {\n    //if (this.state.posterInfo === null) return (<div/>);\n    let data = Object.assign({}, this.props.data);\n    let storyUserData = getStoryUserData(data.userid) || {};\n    Object.assign(data, {\n      name: storyUserData.name,\n      profileimg: storyUserData.img\n    });\n    const heartClass = this.state.heartClass;\n    const dateT = fn_dateTimeToFormatted(data.created); // const {posterInfo} = this.state;\n    // console.log(data);\n\n    if (this.contents.current) {\n      this.contents.current.innerHTML = unescape(this.props.data.contents);\n    }\n\n    return React.createElement(\"li\", {\n      className: \"commentItem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flexClass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, data.profileimg ? React.createElement(\"div\", {\n      className: \"img_profile comment_user_img\",\n      style: {\n        backgroundImage: `url(${data.profileimg})`\n      },\n      onClick: e => {\n        e.preventDefault();\n        this.props.history.push(`/story/${data.userid}/main`);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: \"img_profile comment_user_normal_img\",\n      onClick: e => {\n        e.preventDefault();\n        this.props.history.push(`/story/${data.userid}/main`);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), !this.state.isEditOn ? React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"comment_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, data.name), React.createElement(\"div\", {\n      className: \"comment_time\",\n      \"data-placement\": \"top\",\n      title: String(data.created),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, dateT.formatted), React.createElement(\"span\", {\n      className: \"ico_ks ico_dot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: `ico_ks ico_love ${heartClass}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"\\uC88B\\uC544\\uC694\"), React.createElement(\"div\", {\n      className: `comment_heartNum ${heartClass}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, this.state.heartsCnt), React.createElement(\"span\", {\n      className: \"ico_ks ico_dot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"btn_like\",\n      onClick: this.commentHeartEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, heartClass.length < 2 ? \"좋아요\" : \"좋아요 취소\")) : null, data.userid === this.nowUserInfo.id ? !this.state.isEditOn ? React.createElement(\"div\", {\n      className: \"cmt_setup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ico_ks2 bn_edit\",\n      \"uk-tooltip\": \"\\uC218\\uC815\",\n      onClick: this.onShowEditForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"ico_ks2 bn_del\",\n      \"uk-tooltip\": \"\\uC0AD\\uC81C\",\n      onClick: this.onDeleteCommentEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    })) : React.createElement(CommentWriting, {\n      postid: this.props.postid,\n      onUpdateComment: this.props.onUpdateComment,\n      type: \"edit\",\n      onShowEditForm: this.onShowEditForm,\n      commentData: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }) : React.createElement(\"span\", {\n      className: \"ico_ks bn_report\",\n      \"uk-tooltip\": \"\\uC2E0\\uACE0\\uD558\\uAE30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      className: \"comment_text\",\n      ref: this.contents,\n      style: !this.state.isEditOn ? null : {\n        display: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"emoticon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, data.emoticon && data.emoticon.length >= 3 && !this.state.isEditOn ? React.createElement(\"img\", {\n      src: data.emoticon,\n      className: \"comment_emoti\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }) : null));\n  }\n\n}\n\nexport default withRouter(CommentItem);","map":{"version":3,"sources":["C:/xampp/htdocs/sns/src/Component/StoryItem/CommentList/CommentItem/CommentItem.js"],"names":["React","addCommentHeart","deleteComment","deleteCommentHeart","getCommentHeart","getStoryUserData","withRouter","CommentWriting","fn_dateTimeToFormatted","dt","min","c","Date","d","minsAgo","Math","floor","result","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","formatted","CommentItem","Component","constructor","props","commentHeartEvent","e","state","heartClass","length","setState","heartsCnt","target","innerHTML","data","heartInfo","JSON","stringify","userid","nowUserInfo","id","heart","commentid","res","loadCommentHeart","hData","Array","isArray","hearts","map","v","parse","console","log","forEach","i","onShowEditForm","isEditOn","contents","current","unescape","onDeleteCommentEvent","onUpdateComment","posterInfo","createRef","localStorage","getItem","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","Object","assign","storyUserData","name","profileimg","img","dateT","created","backgroundImage","preventDefault","history","push","String","postid","display","emoticon"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './CommentItem.css';\r\nimport {\r\n  addCommentHeart,\r\n  deleteComment,\r\n  deleteCommentHeart,\r\n  getCommentHeart,\r\n  getStoryUserData\r\n} from \"../../../../services/DataService\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {CommentWriting} from \"../../../CommentWriting/CommentWriting\";\r\n\r\nconst fn_dateTimeToFormatted = (dt) => {\r\n  let min = 60 * 1000;\r\n  let c = new Date();\r\n  let d = new Date(dt);\r\n  let minsAgo = Math.floor((c - d) / (min));\r\n\r\n  let result = {\r\n    'raw': d.getFullYear() + '-' + (d.getMonth() + 1 > 9 ? '' : '0') + (d.getMonth() + 1) + '-' +\r\n      (d.getDate() > 9 ? '' : '0') + d.getDate() + ' ' + (d.getHours() > 9 ? '' : '0') +\r\n      d.getHours() + ':' + (d.getMinutes() > 9 ? '' : '0') + d.getMinutes() + ':' +\r\n      (d.getSeconds() > 9 ? '' : '0') + d.getSeconds(),\r\n    'formatted': '',\r\n  };\r\n\r\n  if (minsAgo < 60) { // 1시간 내\r\n    result.formatted = minsAgo + '분 전';\r\n  }\r\n  else if (minsAgo < 60 * 24) { // 하루 내\r\n    result.formatted = Math.floor(minsAgo / 60) + '시간 전';\r\n  }\r\n  else { // 하루 이상\r\n    result.formatted = Math.floor(minsAgo / 60 / 24) + '일 전';\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nclass CommentItem extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      posterInfo: null,\r\n      heartClass: \"\", // heart_on\r\n      hearts: [],\r\n      heartsCnt: 0,\r\n\r\n      isEditOn: false\r\n    };\r\n    this.loadCommentHeart();\r\n    this.contents = React.createRef();\r\n    this.nowUserInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n  }\r\n\r\n  commentHeartEvent = (e) => {\r\n    // console.log(e.target);\r\n    if (this.state.heartClass.length < 2) {\r\n      this.setState({heartClass: \"heart_on\", heartsCnt: this.state.heartsCnt + 1});\r\n      e.target.innerHTML = \"좋아요 취소\";\r\n      let data = {\r\n        heartInfo: JSON.stringify({userid: this.nowUserInfo.id, heart: \"heart_on\"}),\r\n        commentid: this.props.data.id\r\n      };\r\n      addCommentHeart(data, (res) => {\r\n        // console.log(res);\r\n      });\r\n    }\r\n    else {\r\n      this.setState({heartClass: \"\", heartsCnt: this.state.heartsCnt - 1});\r\n      e.target.innerHTML = \"좋아요\";\r\n      let data = {\r\n        heartInfo: JSON.stringify({userid: this.nowUserInfo.id, heart: \"heart_on\"}),\r\n        commentid: this.props.data.id\r\n      };\r\n      deleteCommentHeart(data, (res) => {\r\n        // console.log(res);\r\n      });\r\n    }\r\n  };\r\n\r\n  loadCommentHeart = () => {\r\n    getCommentHeart(this.props.data.id, (hData) => {\r\n      // console.log(JSON.parse(hData.data[0]));\r\n      if (hData.data[0] !== \"\") {\r\n        if (Array.isArray(hData.data)) {\r\n          this.setState({hearts: hData.data.map(v => JSON.parse(v))});\r\n          console.log(this.state.hearts);\r\n          this.state.hearts.forEach((v, i) => {\r\n            if (v.userid === this.nowUserInfo.id) {\r\n              this.setState({heartClass: v.heart});\r\n            }\r\n          });\r\n        }\r\n        else {\r\n          this.setState({hearts: JSON.parse(hData.data)});\r\n          console.log(this.state.hearts);\r\n          this.state.hearts.forEach((v, i) => {\r\n            if (v.userid === this.nowUserInfo.id) {\r\n              this.setState({heartClass: this.state.hearts.heart});\r\n            }\r\n          });\r\n        }\r\n\r\n        this.setState({heartsCnt: this.state.hearts.length});\r\n      }\r\n    });\r\n  };\r\n\r\n  onShowEditForm = () => {\r\n    this.setState({isEditOn: (this.state.isEditOn) ? false : true});\r\n    this.contents.current.innerHTML = unescape(this.props.data.contents);\r\n  };\r\n\r\n  onDeleteCommentEvent = () => {\r\n    console.log(this.props.data.id);\r\n    deleteComment(this.props.data.id, res => {\r\n      this.props.onUpdateComment(this.props.data.id, null);\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.contents.current.innerHTML = unescape(this.props.data.contents);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevState.state && this.state.hearts !== prevState.state.hearts) {\r\n      this.loadCommentHeart();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    //if (this.state.posterInfo === null) return (<div/>);\r\n\r\n    let data = Object.assign({}, this.props.data);\r\n    let storyUserData = getStoryUserData(data.userid) || {};\r\n    Object.assign(data, {name: storyUserData.name, profileimg: storyUserData.img});\r\n    const {heartClass} = this.state;\r\n    const dateT = fn_dateTimeToFormatted(data.created);\r\n    // const {posterInfo} = this.state;\r\n    // console.log(data);\r\n    if (this.contents.current) {\r\n      this.contents.current.innerHTML = unescape(this.props.data.contents);\r\n    }\r\n    return (\r\n      <li className=\"commentItem\">\r\n        <div className=\"flexClass\">\r\n          {\r\n            (data.profileimg) ? (\r\n              <div className=\"img_profile comment_user_img\" style={{backgroundImage: `url(${data.profileimg})`}}\r\n                   onClick={(e) => {\r\n                     e.preventDefault();\r\n                     this.props.history.push(`/story/${data.userid}/main`);\r\n                   }}/>\r\n            ) : (\r\n              <div className=\"img_profile comment_user_normal_img\" onClick={(e) => {\r\n                e.preventDefault();\r\n                this.props.history.push(`/story/${data.userid}/main`);\r\n              }}/>\r\n            )\r\n          }\r\n\r\n          {\r\n            (!this.state.isEditOn) ?\r\n              (\r\n                <>\r\n                  <div className=\"comment_name\">{data.name}</div>\r\n                  <div className=\"comment_time\" data-placement=\"top\"\r\n                       title={String(data.created)}>{dateT.formatted}</div>\r\n                  <span className=\"ico_ks ico_dot\"/>\r\n                  <span className={`ico_ks ico_love ${heartClass}`}>좋아요</span>\r\n                  <div className={`comment_heartNum ${heartClass}`}>{this.state.heartsCnt}</div>\r\n\r\n                  <span className=\"ico_ks ico_dot\"/>\r\n                  <div className=\"btn_like\" onClick={this.commentHeartEvent}>\r\n                    {\r\n                      (heartClass.length < 2) ? \"좋아요\" : \"좋아요 취소\"\r\n                    }\r\n                  </div>\r\n                </>\r\n              ) : null\r\n          }\r\n\r\n\r\n          {\r\n            (data.userid === this.nowUserInfo.id) ?\r\n              (!this.state.isEditOn) ?\r\n                (\r\n                  <div className=\"cmt_setup\">\r\n                    <span className=\"ico_ks2 bn_edit\" uk-tooltip=\"수정\" onClick={this.onShowEditForm}/>\r\n                    <span className=\"ico_ks2 bn_del\" uk-tooltip=\"삭제\" onClick={this.onDeleteCommentEvent}/>\r\n                  </div>\r\n                ) :\r\n                (<CommentWriting postid={this.props.postid} onUpdateComment={this.props.onUpdateComment}\r\n                                 type=\"edit\" onShowEditForm={this.onShowEditForm} commentData={data}/>)\r\n              : (<span className=\"ico_ks bn_report\" uk-tooltip=\"신고하기\"/>)\r\n          }\r\n        </div>\r\n\r\n        <p className=\"comment_text\" ref={this.contents} style={(!this.state.isEditOn) ? null : {display: \"none\"}}/>\r\n        <div className=\"emoticon\">\r\n          {\r\n            (data.emoticon && data.emoticon.length >= 3 && !this.state.isEditOn) ?\r\n              (<img src={data.emoticon} className=\"comment_emoti\"/>) : null\r\n          }\r\n        </div>\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(CommentItem);\r\n"]},"metadata":{},"sourceType":"module"}