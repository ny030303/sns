{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\sns\\\\src\\\\Component\\\\WritingContainer\\\\WritingContainer.js\";\nimport React from 'react';\nimport './WritingContainer.css';\nimport { postWriting, updatePost, getSnsFileData } from \"../../services/DataService\";\nimport FileUploadPopup from \"./FileUploadPopup/FileUploadPopup\";\nimport alertDialog from \"../../services/AlertDialog\";\nimport eventService from \"../../services/EventService\";\nimport { MyMenu } from \"../MyMenu/MyMenu\";\nimport { HashtagForm } from \"../HashtagForm/HashtagForm\";\n\nconst fileToDataURL = async inputfile => {\n  if (inputfile === undefined) return null; //console.log(inputfile.files[0]);\n\n  let fileData = await new Promise(resolve => {\n    const reader = new FileReader();\n\n    reader.onload = e => resolve(reader.result);\n\n    reader.readAsDataURL(inputfile);\n  });\n  return fileData;\n};\n\nconst replaceAll = (str, target, replacement) => {\n  return str.split(target).join(replacement);\n};\n\nconst htmlchar_run = str => {\n  let tmp = replaceAll(str, '\\t', \"&nbsp;&nbsp;&nbsp;&nbsp;\");\n  tmp = replaceAll(tmp, \" \", \"&nbsp;\");\n  tmp = replaceAll(tmp, '\\n', \"<br/>\");\n  return tmp;\n};\n\nclass WritingContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.writeEvent = e => {\n      if (this.state.isPostOn === false) this.setState({\n        isPostOn: true\n      });\n      this.setState({\n        postContents: e.target.innerHTML\n      });\n      let lastText = e.target.innerHTML.substr(-1, 1);\n\n      if (lastText === \"#\") {\n        let regex = new RegExp(\"#[\\\\d|A-Z|a-z|ㄱ-ㅎ|ㅏ-ㅣ|가-힣]*\", \"gm\");\n        let content = e.target.innerHTML;\n        content = content.replace(regex, `<span class=\"hashtag_color\">$&</span>`);\n        e.target.innerHTML = content;\n        this.setState({\n          isHashLayerOn: true\n        });\n      } else if (lastText === \" \" || e.target.innerHTML.length <= 0) {\n        let regex = new RegExp(\"\\s\", \"g\");\n        let content = e.target.innerHTML;\n        content = content.replace(regex, ``);\n        e.target.innerHTML = content;\n        this.setState({\n          isHashLayerOn: false\n        });\n      }\n    };\n\n    this.postOff = () => {\n      if (this.props.writingType !== undefined) {\n        this.props.showModalWritingContainer();\n      } else {\n        this.setState({\n          isPostOn: false,\n          files: []\n        });\n        let contents = document.querySelector(\"#contents_write\");\n        contents.innerText = \"\";\n      }\n    };\n\n    this.postEvent = () => {\n      let fArr = this.state.files;\n\n      if (this.props.postData) {\n        // 글 수정일때\n        let data = {\n          postid: this.props.postData.id,\n          userid: JSON.parse(localStorage.getItem(\"userInfo\")).id,\n          contents: escape(htmlchar_run(this.state.postContents)),\n          fileData: fArr.length <= 0 ? null : fArr.join(\"|\"),\n          isprivatenum: this.state.isPrivateNum\n        };\n        updatePost(data, res => {\n          console.log(res);\n          eventService.emitEvent(\"updatePostToMainStory\", res.postData);\n          alertDialog.show(\"안내\", \"수정 되었습니다.\");\n          this.postOff();\n        });\n      } else {\n        // 글 작성일때\n        let data = {\n          userid: JSON.parse(localStorage.getItem(\"userInfo\")).id,\n          feeling: 0,\n          contents: escape(htmlchar_run(this.state.postContents)),\n          fileData: fArr.length <= 0 ? null : fArr.join(\"|\"),\n          isprivatenum: this.state.isPrivateNum\n        }; // console.log(data.fileData.length);\n\n        postWriting(data, res => {\n          console.log(res);\n          alertDialog.show(\"안내\", \"소식을 성공적으로 업로드 했습니다.\" + \"'나만보기'로 설정한 글은 내 스토리에서만 볼 수 있습니다.\" + \" 지금 올린 스토리를 확인해보세요.\");\n          this.postOff();\n          eventService.emitEvent(\"reloadStorys\", \"asdf\");\n\n          if (this.props.getPostEvent !== null) {\n            this.props.getPostEvent();\n          }\n        });\n      }\n    };\n\n    this.dragOverEvent = e => {\n      console.log(\"드래그 오버\");\n      e.preventDefault();\n    };\n\n    this.dropEvent = e => {\n      e.preventDefault();\n      let list = Array.from(e.dataTransfer.files);\n      list.forEach(v => {\n        fileToDataURL(v).then(res => {\n          this.setState({\n            files: [...this.state.files, ...[res]]\n          });\n        });\n      });\n    };\n\n    this.selectFile = e => {\n      console.log(e.target.files[0]);\n      fileToDataURL(e.target.files[0]).then(res => {\n        this.setState({\n          files: [...this.state.files, ...[res]]\n        });\n        console.log(this.state.files);\n      });\n    };\n\n    this.showFileUploadPopup = popupShow => {\n      this.setState({\n        fileUploadPopup: popupShow\n      });\n    };\n\n    this.attachFiles = fileDatas => {\n      console.log(fileDatas);\n      this.setState({\n        files: [...this.state.files, ...fileDatas]\n      });\n      this.showFileUploadPopup(false); // alertDialog.show(\"안내\", \"파일이 첨부됐습니다.\");\n    };\n\n    this.deleteFile = e => {\n      let files = this.state.files;\n      let num = e.target.dataset.lnum;\n      files.splice(num, 1);\n      this.setState({\n        files: files\n      });\n    };\n\n    this.showIsPrivateListOn = () => this.setState({\n      isPrivateListOn: !this.state.isPrivateListOn\n    });\n\n    this.changeIsPrivateNum = e => this.setState({\n      isPrivateNum: e.target.dataset.num,\n      isPrivateListOn: false\n    });\n\n    this.state = {\n      postContents: \"\",\n      isPostOn: props.writingType !== undefined ? true : false,\n      isPrivateListOn: false,\n      isHashtagFormOn: false,\n      postMsg: [`${JSON.parse(localStorage.getItem(\"userInfo\")).name}님의 이야기를 기다리고 있어요.`, \"오늘 하루, 기억하고 싶은 순간이 있나요?\"],\n      files: [],\n      fileUploadPopup: false,\n      isPrivateNum: 2\n    };\n    this.myPostFile = React.createRef();\n    this.randomNum = Math.floor(Math.random() * 2);\n    this.privateBoxArr = [{\n      text: \"나만 공개\",\n      class: \"ico_ks ic_lock\"\n    }, {\n      text: \"친구 공개\",\n      class: \"ico_ks ic_friend\"\n    }, {\n      text: \"전체 공개\",\n      class: \"ico_ks global\"\n    }];\n    this.divContents = React.createRef();\n  }\n\n  componentDidMount() {\n    if (this.props.postData) {\n      console.log(this.props.postData);\n      this.divContents.current.innerHTML = unescape(this.props.postData.contents);\n\n      if (this.props.postData.file) {\n        getSnsFileData(this.props.postData.file, res => this.setState({\n          files: res.files\n        }));\n        this.setState({\n          isPrivateNum: Number(this.props.postData.isprivate_num)\n        });\n      } //  /php/downloadImage.php?id=19&subid=0\n\n    }\n  }\n\n  // showHashtagForm = () => {\n  //   this.setState({isHashtagFormOn: !this.state.isHashtagFormOn});\n  // };\n  render() {\n    // <input type=\"email|file\" multiple>\n    // console.log(this.state.files);\n    return React.createElement(\"div\", {\n      className: \"writingContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"write\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"section\",\n      onDragOver: this.dragOverEvent,\n      onDrop: this.dropEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: this.divContents,\n      id: \"contents_write\",\n      className: \"editable\",\n      contentEditable: \"true\",\n      onChange: this.writeEvent,\n      onInput: this.writeEvent,\n      style: this.state.isPostOn ? {\n        minHeight: \"130px\"\n      } : {\n        minHeight: \"37px\"\n      },\n      placeholder: this.state.postMsg[this.randomNum],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      className: \"uk-list fileList writeFileList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, this.state.files.map((v, i) => React.createElement(\"div\", {\n      key: i,\n      className: \"upload-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"img-box\",\n      style: v.substr(5, 5) === \"video\" ? {\n        backgroundColor: \"#000\"\n      } : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, v.substr(5, 5) === \"image\" ? React.createElement(\"img\", {\n      src: v,\n      alt: \"img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }) : React.createElement(\"video\", {\n      style: {\n        position: \"absolute\",\n        top: \"50%\",\n        transform: \"translate(0, -50%)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"source\", {\n      src: v,\n      type: v.substr(5, 9),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"ico_ks bn_x\",\n      onClick: this.deleteFile,\n      \"data-lnum\": i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"text-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, v.substr(5, 5), \"-\", i + 1)))), React.createElement(\"ul\", {\n      className: \"fileUploadList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"link_menu\",\n      onClick: () => this.showFileUploadPopup(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"txt_menu\",\n      htmlFor: \"ex_file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ico_ks ico_camera\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"\\uC0AC\\uC9C4/\\uB3D9\\uC601\\uC0C1\"))), React.createElement(\"input\", {\n      type: \"file\",\n      id: \"ex_file\",\n      ref: this.myPostFile,\n      onChange: this.selectFile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      className: \"link_menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"txt_menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ico_ks ico_music\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"\\uBBA4\\uC9C1\")))), React.createElement(\"li\", {\n      className: \"link_menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"txt_menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ico_ks ico_link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"\\uB9C1\\uD06C\"))))), React.createElement(\"div\", {\n      className: \"bottomWriteContents\",\n      style: this.state.isPostOn ? {\n        display: \"block\"\n      } : {\n        display: \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inner_open\",\n      onClick: this.showIsPrivateListOn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flexClass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: this.privateBoxArr[this.state.isPrivateNum - 1].class,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, this.privateBoxArr[this.state.isPrivateNum - 1].text), React.createElement(\"span\", {\n      className: \"ico_ks arr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }))), this.state.isPrivateListOn ? React.createElement(MyMenu, {\n      menuInfo: [{\n        text: \"전체공개\",\n        icon: \"ico_ks global\",\n        type: \"checkBox\",\n        data_set: 3,\n        eventCallback: this.changeIsPrivateNum\n      }, {\n        text: \"친구공개\",\n        icon: \"ico_ks ic_friend\",\n        type: \"checkBox\",\n        data_set: 2,\n        eventCallback: this.changeIsPrivateNum\n      }, {\n        text: \"나만보기\",\n        icon: \"ico_ks ic_lock\",\n        type: \"checkBox\",\n        data_set: 1,\n        eventCallback: this.changeIsPrivateNum\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }) : null //{text: \"친구만 댓글 허용\", type: \"checkBox\"},\n    //{text: \"공유 허용\", type: \"checkBox\"}\n    , React.createElement(\"div\", {\n      className: \"postIconWrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      \"uk-tooltip\": \"\\uD574\\uC2DC\\uD0DC\\uADF8 \\uCD94\\uAC00\",\n      className: \"hashtag_icon\",\n      onClick: this.showHashtagForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"#\")), React.createElement(\"div\", {\n      className: \"writePostBtns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn blackLineBtn\",\n      onClick: this.postOff,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"\\uCDE8\\uC18C\"), React.createElement(\"button\", {\n      className: \"btn orangeColorBtn nullTextOrangeColor\",\n      style: this.state.postContents.length > 0 ? {\n        display: \"none\"\n      } : {\n        display: \"inline-block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"\\uC62C\\uB9AC\\uAE30\"), React.createElement(\"button\", {\n      className: \"btn orangeColorBtn\",\n      style: this.state.postContents.length > 0 ? {\n        display: \"inline-block\"\n      } : {\n        display: \"none\"\n      },\n      onClick: this.postEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \"\\uC62C\\uB9AC\\uAE30\"))))));\n  }\n\n}\n\nexport default WritingContainer;","map":{"version":3,"sources":["C:/xampp/htdocs/sns/src/Component/WritingContainer/WritingContainer.js"],"names":["React","postWriting","updatePost","getSnsFileData","FileUploadPopup","alertDialog","eventService","MyMenu","HashtagForm","fileToDataURL","inputfile","undefined","fileData","Promise","resolve","reader","FileReader","onload","e","result","readAsDataURL","replaceAll","str","target","replacement","split","join","htmlchar_run","tmp","WritingContainer","Component","constructor","props","writeEvent","state","isPostOn","setState","postContents","innerHTML","lastText","substr","regex","RegExp","content","replace","isHashLayerOn","length","postOff","writingType","showModalWritingContainer","files","contents","document","querySelector","innerText","postEvent","fArr","postData","data","postid","id","userid","JSON","parse","localStorage","getItem","escape","isprivatenum","isPrivateNum","res","console","log","emitEvent","show","feeling","getPostEvent","dragOverEvent","preventDefault","dropEvent","list","Array","from","dataTransfer","forEach","v","then","selectFile","showFileUploadPopup","popupShow","fileUploadPopup","attachFiles","fileDatas","deleteFile","num","dataset","lnum","splice","showIsPrivateListOn","isPrivateListOn","changeIsPrivateNum","isHashtagFormOn","postMsg","name","myPostFile","createRef","randomNum","Math","floor","random","privateBoxArr","text","class","divContents","componentDidMount","current","unescape","file","Number","isprivate_num","render","minHeight","map","i","backgroundColor","position","top","transform","display","icon","type","data_set","eventCallback","showHashtagForm"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;AACA,SAAQC,WAAR,EAAqBC,UAArB,EAAiCC,cAAjC,QAAsD,4BAAtD;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,SAAQC,MAAR,QAAqB,kBAArB;AACA,SAAQC,WAAR,QAA0B,4BAA1B;;AAGA,MAAMC,aAAa,GAAG,MAAOC,SAAP,IAAqB;AACzC,MAAIA,SAAS,KAAKC,SAAlB,EAA6B,OAAO,IAAP,CADY,CAEzC;;AACA,MAAIC,QAAQ,GAAG,MAAM,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC5C,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAiBC,CAAD,IAAOJ,OAAO,CAACC,MAAM,CAACI,MAAR,CAA9B;;AACAJ,IAAAA,MAAM,CAACK,aAAP,CAAqBV,SAArB;AACD,GAJoB,CAArB;AAKA,SAAOE,QAAP;AACD,CATD;;AAWA,MAAMS,UAAU,GAAG,CAACC,GAAD,EAAMC,MAAN,EAAcC,WAAd,KAA8B;AAC/C,SAAOF,GAAG,CAACG,KAAJ,CAAUF,MAAV,EAAkBG,IAAlB,CAAuBF,WAAvB,CAAP;AACD,CAFD;;AAIA,MAAMG,YAAY,GAAIL,GAAD,IAAS;AAC5B,MAAKM,GAAG,GAACP,UAAU,CAACC,GAAD,EAAK,IAAL,EAAU,0BAAV,CAAnB;AACAM,EAAAA,GAAG,GAACP,UAAU,CAACO,GAAD,EAAK,GAAL,EAAS,QAAT,CAAd;AACAA,EAAAA,GAAG,GAACP,UAAU,CAACO,GAAD,EAAK,IAAL,EAAU,OAAV,CAAd;AACA,SAAOA,GAAP;AAED,CAND;;AAQA,MAAMC,gBAAN,SAA+B7B,KAAK,CAAC8B,SAArC,CAA+C;AAE7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAqCnBC,UArCmB,GAqCLf,CAAD,IAAO;AAClB,UAAI,KAAKgB,KAAL,CAAWC,QAAX,KAAwB,KAA5B,EAAmC,KAAKC,QAAL,CAAc;AAACD,QAAAA,QAAQ,EAAE;AAAX,OAAd;AACnC,WAAKC,QAAL,CAAc;AAACC,QAAAA,YAAY,EAAEnB,CAAC,CAACK,MAAF,CAASe;AAAxB,OAAd;AAEA,UAAIC,QAAQ,GAAGrB,CAAC,CAACK,MAAF,CAASe,SAAT,CAAmBE,MAAnB,CAA0B,CAAC,CAA3B,EAA6B,CAA7B,CAAf;;AAEA,UAAGD,QAAQ,KAAK,GAAhB,EAAqB;AACnB,YAAIE,KAAK,GAAG,IAAIC,MAAJ,CAAW,6BAAX,EAA0C,IAA1C,CAAZ;AACA,YAAIC,OAAO,GAAGzB,CAAC,CAACK,MAAF,CAASe,SAAvB;AACAK,QAAAA,OAAO,GAAGA,OAAO,CAACC,OAAR,CAAgBH,KAAhB,EAAwB,uCAAxB,CAAV;AACAvB,QAAAA,CAAC,CAACK,MAAF,CAASe,SAAT,GAAqBK,OAArB;AACA,aAAKP,QAAL,CAAc;AAACS,UAAAA,aAAa,EAAE;AAAhB,SAAd;AACD,OAND,MAMO,IAAGN,QAAQ,KAAK,GAAb,IAAoBrB,CAAC,CAACK,MAAF,CAASe,SAAT,CAAmBQ,MAAnB,IAA6B,CAApD,EAAuD;AAC5D,YAAIL,KAAK,GAAG,IAAIC,MAAJ,CAAW,IAAX,EAAiB,GAAjB,CAAZ;AACA,YAAIC,OAAO,GAAGzB,CAAC,CAACK,MAAF,CAASe,SAAvB;AACAK,QAAAA,OAAO,GAAGA,OAAO,CAACC,OAAR,CAAgBH,KAAhB,EAAwB,EAAxB,CAAV;AACAvB,QAAAA,CAAC,CAACK,MAAF,CAASe,SAAT,GAAqBK,OAArB;AACA,aAAKP,QAAL,CAAc;AAACS,UAAAA,aAAa,EAAE;AAAhB,SAAd;AACD;AACF,KAxDkB;;AAAA,SA0DnBE,OA1DmB,GA0DT,MAAM;AACd,UAAG,KAAKf,KAAL,CAAWgB,WAAX,KAA2BrC,SAA9B,EAAyC;AACvC,aAAKqB,KAAL,CAAWiB,yBAAX;AACD,OAFD,MAEO;AACL,aAAKb,QAAL,CAAc;AAACD,UAAAA,QAAQ,EAAE,KAAX;AAAkBe,UAAAA,KAAK,EAAE;AAAzB,SAAd;AACA,YAAIC,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,iBAAvB,CAAf;AACAF,QAAAA,QAAQ,CAACG,SAAT,GAAqB,EAArB;AACD;AACF,KAlEkB;;AAAA,SAoEnBC,SApEmB,GAoEP,MAAM;AAChB,UAAIC,IAAI,GAAG,KAAKtB,KAAL,CAAWgB,KAAtB;;AACA,UAAG,KAAKlB,KAAL,CAAWyB,QAAd,EAAwB;AAAE;AACxB,YAAIC,IAAI,GAAG;AACTC,UAAAA,MAAM,EAAE,KAAK3B,KAAL,CAAWyB,QAAX,CAAoBG,EADnB;AAETC,UAAAA,MAAM,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,EAA6CL,EAF5C;AAGTT,UAAAA,QAAQ,EAAEe,MAAM,CAACvC,YAAY,CAAC,KAAKO,KAAL,CAAWG,YAAZ,CAAb,CAHP;AAITzB,UAAAA,QAAQ,EAAG4C,IAAI,CAACV,MAAL,IAAe,CAAhB,GAAqB,IAArB,GAA4BU,IAAI,CAAC9B,IAAL,CAAU,GAAV,CAJ7B;AAKTyC,UAAAA,YAAY,EAAE,KAAKjC,KAAL,CAAWkC;AALhB,SAAX;AAQAlE,QAAAA,UAAU,CAACwD,IAAD,EAAQW,GAAD,IAAS;AACxBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA/D,UAAAA,YAAY,CAACkE,SAAb,CAAuB,uBAAvB,EAAgDH,GAAG,CAACZ,QAApD;AACApD,UAAAA,WAAW,CAACoE,IAAZ,CAAiB,IAAjB,EAAuB,WAAvB;AACA,eAAK1B,OAAL;AACD,SALS,CAAV;AAMD,OAfD,MAeO;AAAE;AACP,YAAIW,IAAI,GAAG;AACTG,UAAAA,MAAM,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,EAA6CL,EAD5C;AAETc,UAAAA,OAAO,EAAE,CAFA;AAGTvB,UAAAA,QAAQ,EAAEe,MAAM,CAACvC,YAAY,CAAC,KAAKO,KAAL,CAAWG,YAAZ,CAAb,CAHP;AAITzB,UAAAA,QAAQ,EAAG4C,IAAI,CAACV,MAAL,IAAe,CAAhB,GAAqB,IAArB,GAA4BU,IAAI,CAAC9B,IAAL,CAAU,GAAV,CAJ7B;AAKTyC,UAAAA,YAAY,EAAE,KAAKjC,KAAL,CAAWkC;AALhB,SAAX,CADK,CAQL;;AACAnE,QAAAA,WAAW,CAACyD,IAAD,EAAQW,GAAD,IAAS;AACzBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAhE,UAAAA,WAAW,CAACoE,IAAZ,CAAiB,IAAjB,EAAuB,wBACrB,mCADqB,GAErB,qBAFF;AAGA,eAAK1B,OAAL;AACAzC,UAAAA,YAAY,CAACkE,SAAb,CAAuB,cAAvB,EAAuC,MAAvC;;AACA,cAAG,KAAKxC,KAAL,CAAW2C,YAAX,KAA4B,IAA/B,EAAqC;AACnC,iBAAK3C,KAAL,CAAW2C,YAAX;AACD;AACF,SAVU,CAAX;AAWD;AACF,KA1GkB;;AAAA,SA4GnBC,aA5GmB,GA4GF1D,CAAD,IAAO;AACrBoD,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACArD,MAAAA,CAAC,CAAC2D,cAAF;AACD,KA/GkB;;AAAA,SAiHnBC,SAjHmB,GAiHN5D,CAAD,IAAO;AACjBA,MAAAA,CAAC,CAAC2D,cAAF;AACA,UAAIE,IAAI,GAAGC,KAAK,CAACC,IAAN,CAAW/D,CAAC,CAACgE,YAAF,CAAehC,KAA1B,CAAX;AACA6B,MAAAA,IAAI,CAACI,OAAL,CAAaC,CAAC,IAAI;AAChB3E,QAAAA,aAAa,CAAC2E,CAAD,CAAb,CAAiBC,IAAjB,CAAsBhB,GAAG,IAAI;AAC3B,eAAKjC,QAAL,CAAc;AAACc,YAAAA,KAAK,EAAE,CAAC,GAAG,KAAKhB,KAAL,CAAWgB,KAAf,EAAsB,GAAG,CAACmB,GAAD,CAAzB;AAAR,WAAd;AACD,SAFD;AAGD,OAJD;AAKD,KAzHkB;;AAAA,SA2HnBiB,UA3HmB,GA2HLpE,CAAD,IAAO;AAClBoD,MAAAA,OAAO,CAACC,GAAR,CAAYrD,CAAC,CAACK,MAAF,CAAS2B,KAAT,CAAe,CAAf,CAAZ;AACAzC,MAAAA,aAAa,CAACS,CAAC,CAACK,MAAF,CAAS2B,KAAT,CAAe,CAAf,CAAD,CAAb,CAAiCmC,IAAjC,CAAsChB,GAAG,IAAI;AAC3C,aAAKjC,QAAL,CAAc;AAACc,UAAAA,KAAK,EAAE,CAAC,GAAG,KAAKhB,KAAL,CAAWgB,KAAf,EAAsB,GAAG,CAACmB,GAAD,CAAzB;AAAR,SAAd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrC,KAAL,CAAWgB,KAAvB;AACD,OAHD;AAID,KAjIkB;;AAAA,SAmInBqC,mBAnImB,GAmIIC,SAAD,IAAe;AACnC,WAAKpD,QAAL,CAAc;AAACqD,QAAAA,eAAe,EAAED;AAAlB,OAAd;AACD,KArIkB;;AAAA,SAuInBE,WAvImB,GAuIJC,SAAD,IAAe;AAC3BrB,MAAAA,OAAO,CAACC,GAAR,CAAYoB,SAAZ;AACA,WAAKvD,QAAL,CAAc;AAACc,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKhB,KAAL,CAAWgB,KAAf,EAAsB,GAAGyC,SAAzB;AAAR,OAAd;AACA,WAAKJ,mBAAL,CAAyB,KAAzB,EAH2B,CAI3B;AACD,KA5IkB;;AAAA,SA8InBK,UA9ImB,GA8IL1E,CAAD,IAAO;AAAA,UACbgC,KADa,GACJ,KAAKhB,KADD,CACbgB,KADa;AAElB,UAAI2C,GAAG,GAAG3E,CAAC,CAACK,MAAF,CAASuE,OAAT,CAAiBC,IAA3B;AACA7C,MAAAA,KAAK,CAAC8C,MAAN,CAAaH,GAAb,EAAkB,CAAlB;AACA,WAAKzD,QAAL,CAAc;AAACc,QAAAA,KAAK,EAAEA;AAAR,OAAd;AACD,KAnJkB;;AAAA,SAqJnB+C,mBArJmB,GAqJG,MAAM,KAAK7D,QAAL,CAAc;AAAC8D,MAAAA,eAAe,EAAE,CAAC,KAAKhE,KAAL,CAAWgE;AAA9B,KAAd,CArJT;;AAAA,SAuJnBC,kBAvJmB,GAuJGjF,CAAD,IAAO,KAAKkB,QAAL,CAAc;AAACgC,MAAAA,YAAY,EAAElD,CAAC,CAACK,MAAF,CAASuE,OAAT,CAAiBD,GAAhC;AAAqCK,MAAAA,eAAe,EAAE;AAAtD,KAAd,CAvJT;;AAEjB,SAAKhE,KAAL,GAAa;AACXG,MAAAA,YAAY,EAAE,EADH;AAEXF,MAAAA,QAAQ,EAAGH,KAAK,CAACgB,WAAN,KAAsBrC,SAAvB,GAAoC,IAApC,GAA2C,KAF1C;AAGXuF,MAAAA,eAAe,EAAE,KAHN;AAIXE,MAAAA,eAAe,EAAE,KAJN;AAKXC,MAAAA,OAAO,EAAE,CACN,GAAEvC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,EAA6CqC,IAAK,mBAD9C,EAEP,yBAFO,CALE;AASXpD,MAAAA,KAAK,EAAE,EATI;AAUXuC,MAAAA,eAAe,EAAE,KAVN;AAWXrB,MAAAA,YAAY,EAAE;AAXH,KAAb;AAcA,SAAKmC,UAAL,GAAkBvG,KAAK,CAACwG,SAAN,EAAlB;AACA,SAAKC,SAAL,GAAiBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAjB;AACA,SAAKC,aAAL,GAAqB,CACnB;AAACC,MAAAA,IAAI,EAAE,OAAP;AAAgBC,MAAAA,KAAK,EAAE;AAAvB,KADmB,EAEnB;AAACD,MAAAA,IAAI,EAAE,OAAP;AAAgBC,MAAAA,KAAK,EAAE;AAAvB,KAFmB,EAGnB;AAACD,MAAAA,IAAI,EAAE,OAAP;AAAgBC,MAAAA,KAAK,EAAE;AAAvB,KAHmB,CAArB;AAIA,SAAKC,WAAL,GAAmBhH,KAAK,CAACwG,SAAN,EAAnB;AACD;;AAEDS,EAAAA,iBAAiB,GAAG;AAClB,QAAG,KAAKjF,KAAL,CAAWyB,QAAd,EAAwB;AACtBa,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvC,KAAL,CAAWyB,QAAvB;AACA,WAAKuD,WAAL,CAAiBE,OAAjB,CAAyB5E,SAAzB,GAAqC6E,QAAQ,CAAC,KAAKnF,KAAL,CAAWyB,QAAX,CAAoBN,QAArB,CAA7C;;AACA,UAAG,KAAKnB,KAAL,CAAWyB,QAAX,CAAoB2D,IAAvB,EAA6B;AAC3BjH,QAAAA,cAAc,CAAC,KAAK6B,KAAL,CAAWyB,QAAX,CAAoB2D,IAArB,EAA2B/C,GAAG,IAAI,KAAKjC,QAAL,CAAc;AAACc,UAAAA,KAAK,EAAGmB,GAAG,CAACnB;AAAb,SAAd,CAAlC,CAAd;AACA,aAAKd,QAAL,CAAc;AAACgC,UAAAA,YAAY,EAAEiD,MAAM,CAAC,KAAKrF,KAAL,CAAWyB,QAAX,CAAoB6D,aAArB;AAArB,SAAd;AACD,OANqB,CAOxB;;AACC;AACF;;AAsHD;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AACP;AACA;AACA,WACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAwB,MAAA,UAAU,EAAE,KAAK3C,aAAzC;AAAwD,MAAA,MAAM,EAAE,KAAKE,SAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAE,KAAKkC,WAAf;AAA4B,MAAA,EAAE,EAAC,gBAA/B;AAAgD,MAAA,SAAS,EAAC,UAA1D;AAAqE,MAAA,eAAe,EAAC,MAArF;AACK,MAAA,QAAQ,EAAE,KAAK/E,UADpB;AACgC,MAAA,OAAO,EAAE,KAAKA,UAD9C;AAEK,MAAA,KAAK,EAAG,KAAKC,KAAL,CAAWC,QAAZ,GAAwB;AAACqF,QAAAA,SAAS,EAAE;AAAZ,OAAxB,GAA+C;AAACA,QAAAA,SAAS,EAAE;AAAZ,OAF3D;AAGK,MAAA,WAAW,EAAE,KAAKtF,KAAL,CAAWmE,OAAX,CAAmB,KAAKI,SAAxB,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME;AAAI,MAAA,SAAS,EAAC,gCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKvE,KAAL,CAAWgB,KAAX,CAAiBuE,GAAjB,CAAqB,CAACrC,CAAD,EAAIsC,CAAJ,KACnB;AAAK,MAAA,GAAG,EAAEA,CAAV;AAAa,MAAA,SAAS,EAAC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,KAAK,EAAGtC,CAAC,CAAC5C,MAAF,CAAS,CAAT,EAAW,CAAX,MAAkB,OAAnB,GAA8B;AAACmF,QAAAA,eAAe,EAAE;AAAlB,OAA9B,GAA0D,IAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKvC,CAAC,CAAC5C,MAAF,CAAS,CAAT,EAAW,CAAX,MAAkB,OAAnB,GACG;AAAK,MAAA,GAAG,EAAE4C,CAAV;AAAa,MAAA,GAAG,EAAC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAEG;AAAO,MAAA,KAAK,EAAE;AAACwC,QAAAA,QAAQ,EAAE,UAAX;AAAuBC,QAAAA,GAAG,EAAE,KAA5B;AAAmCC,QAAAA,SAAS,EAAE;AAA9C,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAQ,MAAA,GAAG,EAAE1C,CAAb;AAAgB,MAAA,IAAI,EAAEA,CAAC,CAAC5C,MAAF,CAAS,CAAT,EAAW,CAAX,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAJP,EASE;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,OAAO,EAAE,KAAKoD,UAA5C;AAAwD,mBAAW8B,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF,EAYE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGtC,CAAC,CAAC5C,MAAF,CAAS,CAAT,EAAW,CAAX,CADH,OACmBkF,CAAC,GAAC,CADrB,CAZF,CADF,CAFJ,CANF,EA6BE;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAA0B,MAAA,OAAO,EAAE,MAAM,KAAKnC,mBAAL,CAAyB,IAAzB,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,UAAjB;AAA4B,MAAA,OAAO,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,KAAK,EAAE;AAACwC,QAAAA,OAAO,EAAE;AAAV,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EACyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADzC,CADF,CADF,EAME;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,SAAtB;AAAgC,MAAA,GAAG,EAAE,KAAKxB,UAA1C;AAAsD,MAAA,QAAQ,EAAE,KAAKjB,UAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF,EASE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,KAAK,EAAE;AAACyC,QAAAA,OAAO,EAAE;AAAV,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EACwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADxC,CADF,CADF,CATF,EAgBE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,KAAK,EAAE;AAACA,QAAAA,OAAO,EAAE;AAAV,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EACuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADvC,CADJ,CADF,CAhBF,CA7BF,EA6DE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAqC,MAAA,KAAK,EAAG,KAAK7F,KAAL,CAAWC,QAAZ,GAAwB;AAAC4F,QAAAA,OAAO,EAAE;AAAV,OAAxB,GAA6C;AAACA,QAAAA,OAAO,EAAE;AAAV,OAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,OAAO,EAAE,KAAK9B,mBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAE,KAAKY,aAAL,CAAmB,KAAK3E,KAAL,CAAWkC,YAAX,GAAwB,CAA3C,EAA8C2C,KAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EACyE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKF,aAAL,CAAmB,KAAK3E,KAAL,CAAWkC,YAAX,GAAwB,CAA3C,EAA8C0C,IAArD,CADzE,EAEE;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF,EAQK,KAAK5E,KAAL,CAAWgE,eAAZ,GACG,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,CACjB;AAACY,QAAAA,IAAI,EAAE,MAAP;AAAekB,QAAAA,IAAI,EAAE,eAArB;AAAsCC,QAAAA,IAAI,EAAE,UAA5C;AAAwDC,QAAAA,QAAQ,EAAE,CAAlE;AAAqEC,QAAAA,aAAa,EAAE,KAAKhC;AAAzF,OADiB,EAEjB;AAACW,QAAAA,IAAI,EAAE,MAAP;AAAekB,QAAAA,IAAI,EAAE,kBAArB;AAAyCC,QAAAA,IAAI,EAAE,UAA/C;AAA2DC,QAAAA,QAAQ,EAAE,CAArE;AAAwEC,QAAAA,aAAa,EAAE,KAAKhC;AAA5F,OAFiB,EAGjB;AAACW,QAAAA,IAAI,EAAE,MAAP;AAAekB,QAAAA,IAAI,EAAE,gBAArB;AAAuCC,QAAAA,IAAI,EAAE,UAA7C;AAAyDC,QAAAA,QAAQ,EAAE,CAAnE;AAAsEC,QAAAA,aAAa,EAAE,KAAKhC;AAA1F,OAHiB,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GAKS,IAbb,CAcI;AACA;AAfJ,MAkBE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,oBAAW,uCAAjB;AAA2B,MAAA,SAAS,EAAC,cAArC;AAAoD,MAAA,OAAO,EAAE,KAAKiC,eAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CAlBF,EAqBE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AAAqC,MAAA,OAAO,EAAE,KAAKrF,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAQ,MAAA,SAAS,EAAC,wCAAlB;AACQ,MAAA,KAAK,EAAG,KAAKb,KAAL,CAAWG,YAAX,CAAwBS,MAAxB,GAAiC,CAAlC,GAAuC;AAACiF,QAAAA,OAAO,EAAE;AAAV,OAAvC,GAA2D;AAACA,QAAAA,OAAO,EAAE;AAAV,OAD1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,EAKE;AAAQ,MAAA,SAAS,EAAC,oBAAlB;AACQ,MAAA,KAAK,EAAG,KAAK7F,KAAL,CAAWG,YAAX,CAAwBS,MAAxB,GAAiC,CAAlC,GAAuC;AAACiF,QAAAA,OAAO,EAAE;AAAV,OAAvC,GAAmE;AAACA,QAAAA,OAAO,EAAE;AAAV,OADlF;AAEQ,MAAA,OAAO,EAAE,KAAKxE,SAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALF,CArBF,CA7DF,CADF,CAHF,CADF;AAsGD;;AAxQ4C;;AA2Q/C,eAAe1B,gBAAf","sourcesContent":["import React from 'react';\r\nimport './WritingContainer.css';\r\nimport {postWriting, updatePost, getSnsFileData} from \"../../services/DataService\";\r\nimport FileUploadPopup from \"./FileUploadPopup/FileUploadPopup\";\r\nimport alertDialog from \"../../services/AlertDialog\";\r\nimport eventService from \"../../services/EventService\";\r\nimport {MyMenu} from \"../MyMenu/MyMenu\";\r\nimport {HashtagForm} from \"../HashtagForm/HashtagForm\";\r\n\r\n\r\nconst fileToDataURL = async (inputfile) => {\r\n  if (inputfile === undefined) return null;\r\n  //console.log(inputfile.files[0]);\r\n  let fileData = await new Promise((resolve) => {\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => resolve(reader.result);\r\n    reader.readAsDataURL(inputfile);\r\n  });\r\n  return fileData;\r\n};\r\n\r\nconst replaceAll = (str, target, replacement) => {\r\n  return str.split(target).join(replacement);\r\n};\r\n\r\nconst htmlchar_run = (str) => {\r\n  let  tmp=replaceAll(str,'\\t',\"&nbsp;&nbsp;&nbsp;&nbsp;\");\r\n  tmp=replaceAll(tmp,\" \",\"&nbsp;\");\r\n  tmp=replaceAll(tmp,'\\n',\"<br/>\");\r\n  return tmp;\r\n\r\n};\r\n\r\nclass WritingContainer extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      postContents: \"\",\r\n      isPostOn: (props.writingType !== undefined) ? true : false,\r\n      isPrivateListOn: false,\r\n      isHashtagFormOn: false,\r\n      postMsg: [\r\n        `${JSON.parse(localStorage.getItem(\"userInfo\")).name}님의 이야기를 기다리고 있어요.`,\r\n        \"오늘 하루, 기억하고 싶은 순간이 있나요?\"\r\n      ],\r\n      files: [],\r\n      fileUploadPopup: false,\r\n      isPrivateNum: 2\r\n    };\r\n\r\n    this.myPostFile = React.createRef();\r\n    this.randomNum = Math.floor(Math.random() * 2);\r\n    this.privateBoxArr = [\r\n      {text: \"나만 공개\", class: \"ico_ks ic_lock\"},\r\n      {text: \"친구 공개\", class: \"ico_ks ic_friend\"},\r\n      {text: \"전체 공개\", class: \"ico_ks global\"}];\r\n    this.divContents = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    if(this.props.postData) {\r\n      console.log(this.props.postData);\r\n      this.divContents.current.innerHTML = unescape(this.props.postData.contents);\r\n      if(this.props.postData.file) {\r\n        getSnsFileData(this.props.postData.file, res => this.setState({files : res.files}));\r\n        this.setState({isPrivateNum: Number(this.props.postData.isprivate_num)});\r\n      }\r\n    //  /php/downloadImage.php?id=19&subid=0\r\n    }\r\n  }\r\n\r\n  writeEvent = (e) => {\r\n    if (this.state.isPostOn === false) this.setState({isPostOn: true});\r\n    this.setState({postContents: e.target.innerHTML});\r\n\r\n    let lastText = e.target.innerHTML.substr(-1,1);\r\n\r\n    if(lastText === \"#\") {\r\n      let regex = new RegExp(\"#[\\\\d|A-Z|a-z|ㄱ-ㅎ|ㅏ-ㅣ|가-힣]*\", \"gm\");\r\n      let content = e.target.innerHTML;\r\n      content = content.replace(regex, `<span class=\"hashtag_color\">$&</span>`);\r\n      e.target.innerHTML = content;\r\n      this.setState({isHashLayerOn: true});\r\n    } else if(lastText === \" \" || e.target.innerHTML.length <= 0) {\r\n      let regex = new RegExp(\"\\s\", \"g\");\r\n      let content = e.target.innerHTML;\r\n      content = content.replace(regex, ``);\r\n      e.target.innerHTML = content;\r\n      this.setState({isHashLayerOn: false});\r\n    }\r\n  };\r\n\r\n  postOff = () => {\r\n    if(this.props.writingType !== undefined) {\r\n      this.props.showModalWritingContainer();\r\n    } else {\r\n      this.setState({isPostOn: false, files: []});\r\n      let contents = document.querySelector(\"#contents_write\");\r\n      contents.innerText = \"\";\r\n    }\r\n  };\r\n\r\n  postEvent = () => {\r\n    let fArr = this.state.files;\r\n    if(this.props.postData) { // 글 수정일때\r\n      let data = {\r\n        postid: this.props.postData.id,\r\n        userid: JSON.parse(localStorage.getItem(\"userInfo\")).id,\r\n        contents: escape(htmlchar_run(this.state.postContents)),\r\n        fileData: (fArr.length <= 0) ? null : fArr.join(\"|\"),\r\n        isprivatenum: this.state.isPrivateNum,\r\n      };\r\n\r\n      updatePost(data, (res) => {\r\n        console.log(res);\r\n        eventService.emitEvent(\"updatePostToMainStory\", res.postData);\r\n        alertDialog.show(\"안내\", \"수정 되었습니다.\");\r\n        this.postOff();\r\n      })\r\n    } else { // 글 작성일때\r\n      let data = {\r\n        userid: JSON.parse(localStorage.getItem(\"userInfo\")).id,\r\n        feeling: 0,\r\n        contents: escape(htmlchar_run(this.state.postContents)),\r\n        fileData: (fArr.length <= 0) ? null : fArr.join(\"|\"),\r\n        isprivatenum: this.state.isPrivateNum,\r\n      };\r\n      // console.log(data.fileData.length);\r\n      postWriting(data, (res) => {\r\n        console.log(res);\r\n        alertDialog.show(\"안내\", \"소식을 성공적으로 업로드 했습니다.\" +\r\n          \"'나만보기'로 설정한 글은 내 스토리에서만 볼 수 있습니다.\" +\r\n          \" 지금 올린 스토리를 확인해보세요.\");\r\n        this.postOff();\r\n        eventService.emitEvent(\"reloadStorys\", \"asdf\");\r\n        if(this.props.getPostEvent !== null) {\r\n          this.props.getPostEvent();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  dragOverEvent = (e) => {\r\n    console.log(\"드래그 오버\");\r\n    e.preventDefault();\r\n  };\r\n\r\n  dropEvent = (e) => {\r\n    e.preventDefault();\r\n    let list = Array.from(e.dataTransfer.files);\r\n    list.forEach(v => {\r\n      fileToDataURL(v).then(res => {\r\n        this.setState({files: [...this.state.files, ...[res]]});\r\n      });\r\n    });\r\n  };\r\n\r\n  selectFile = (e) => {\r\n    console.log(e.target.files[0]);\r\n    fileToDataURL(e.target.files[0]).then(res => {\r\n      this.setState({files: [...this.state.files, ...[res]]});\r\n      console.log(this.state.files);\r\n    });\r\n  };\r\n\r\n  showFileUploadPopup = (popupShow) => {\r\n    this.setState({fileUploadPopup: popupShow});\r\n  };\r\n\r\n  attachFiles = (fileDatas) => {\r\n    console.log(fileDatas);\r\n    this.setState({files: [...this.state.files, ...fileDatas]});\r\n    this.showFileUploadPopup(false);\r\n    // alertDialog.show(\"안내\", \"파일이 첨부됐습니다.\");\r\n  };\r\n\r\n  deleteFile = (e) => {\r\n    let {files} = this.state;\r\n    let num = e.target.dataset.lnum;\r\n    files.splice(num, 1);\r\n    this.setState({files: files});\r\n  };\r\n\r\n  showIsPrivateListOn = () => this.setState({isPrivateListOn: !this.state.isPrivateListOn});\r\n\r\n  changeIsPrivateNum = (e) => this.setState({isPrivateNum: e.target.dataset.num, isPrivateListOn: false});\r\n\r\n  // showHashtagForm = () => {\r\n  //   this.setState({isHashtagFormOn: !this.state.isHashtagFormOn});\r\n  // };\r\n\r\n  render() {\r\n    // <input type=\"email|file\" multiple>\r\n    // console.log(this.state.files);\r\n    return (\r\n      <div className=\"writingContainer\">\r\n        {/*{this.state.fileUploadPopup ?*/}\r\n        {/*  <FileUploadPopup showFileUploadPopup={this.showFileUploadPopup} fileToDataURL={fileToDataURL} attachFiles={this.attachFiles}/> : null}*/}\r\n        <div className=\"write\">\r\n          <div className=\"section\"onDragOver={this.dragOverEvent} onDrop={this.dropEvent}>\r\n            <div ref={this.divContents} id=\"contents_write\" className=\"editable\" contentEditable=\"true\"\r\n                 onChange={this.writeEvent} onInput={this.writeEvent}\r\n                 style={(this.state.isPostOn) ? {minHeight: \"130px\"} : {minHeight: \"37px\"}}\r\n                 placeholder={this.state.postMsg[this.randomNum]}/>\r\n            <br/>\r\n            <ul className=\"uk-list fileList writeFileList\">\r\n              {\r\n                this.state.files.map((v, i) => (\r\n                  <div key={i} className=\"upload-item\">\r\n                    <div className=\"img-box\" style={(v.substr(5,5) === \"video\") ? {backgroundColor: \"#000\"} : null}>\r\n                      {\r\n                        (v.substr(5,5) === \"image\") ?\r\n                          (<img src={v} alt=\"img\"/>) :\r\n                          (<video style={{position: \"absolute\", top: \"50%\", transform: \"translate(0, -50%)\"}}>\r\n                            <source src={v} type={v.substr(5,9)}/>\r\n                          </video>)\r\n                      }\r\n\r\n                      <span className=\"ico_ks bn_x\" onClick={this.deleteFile} data-lnum={i}/>\r\n                    </div>\r\n                    <div className=\"text-box\">\r\n                      {v.substr(5,5)}-{i+1}\r\n                    </div>\r\n                  </div>\r\n                ))\r\n              }\r\n            </ul>\r\n\r\n            <ul className=\"fileUploadList\">\r\n              <li className=\"link_menu\" onClick={() => this.showFileUploadPopup(true)}>\r\n                <label className=\"txt_menu\" htmlFor=\"ex_file\">\r\n                  <span style={{display: \"flex\"}}>\r\n                      <span className=\"ico_ks ico_camera\"/><span>사진/동영상</span>\r\n                  </span>\r\n                </label>\r\n                <input type=\"file\" id=\"ex_file\" ref={this.myPostFile} onChange={this.selectFile}/>\r\n              </li>\r\n              <li className=\"link_menu\">\r\n                <div className=\"txt_menu\">\r\n                  <span style={{display: \"flex\"}}>\r\n                      <span className=\"ico_ks ico_music\"/><span>뮤직</span>\r\n                  </span>\r\n                </div>\r\n              </li>\r\n              <li className=\"link_menu\">\r\n                <div className=\"txt_menu\">\r\n                    <span style={{display: \"flex\"}}>\r\n                        <span className=\"ico_ks ico_link\"/><span>링크</span>\r\n                    </span>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n\r\n            {/*{*/}\r\n            {/*  (this.state.isHashtagFormOn) ?*/}\r\n            {/*    (*/}\r\n            {/*     <HashtagForm/>*/}\r\n            {/*    ) : null*/}\r\n            {/*}*/}\r\n\r\n            <div className=\"bottomWriteContents\" style={(this.state.isPostOn) ? {display: \"block\"} : {display: \"none\"}}>\r\n              <div className=\"inner_open\" onClick={this.showIsPrivateListOn}>\r\n                <div className=\"flexClass\">\r\n                  <span className={this.privateBoxArr[this.state.isPrivateNum-1].class}/><span>{this.privateBoxArr[this.state.isPrivateNum-1].text}</span>\r\n                  <span className=\"ico_ks arr\"/>\r\n                </div>\r\n              </div>\r\n              {\r\n                (this.state.isPrivateListOn) ?\r\n                  (<MyMenu menuInfo={[\r\n                    {text: \"전체공개\", icon: \"ico_ks global\", type: \"checkBox\", data_set: 3, eventCallback: this.changeIsPrivateNum},\r\n                    {text: \"친구공개\", icon: \"ico_ks ic_friend\", type: \"checkBox\", data_set: 2, eventCallback: this.changeIsPrivateNum},\r\n                    {text: \"나만보기\", icon: \"ico_ks ic_lock\", type: \"checkBox\", data_set: 1, eventCallback: this.changeIsPrivateNum},\r\n                  ]}/>): null\r\n                //{text: \"친구만 댓글 허용\", type: \"checkBox\"},\r\n                //{text: \"공유 허용\", type: \"checkBox\"}\r\n              }\r\n\r\n              <div className=\"postIconWrap\">\r\n                <span uk-tooltip=\"해시태그 추가\" className=\"hashtag_icon\" onClick={this.showHashtagForm}>#</span>\r\n              </div>\r\n              <div className=\"writePostBtns\">\r\n                <button className=\"btn blackLineBtn\" onClick={this.postOff}>취소</button>\r\n                <button className=\"btn orangeColorBtn nullTextOrangeColor\"\r\n                        style={(this.state.postContents.length > 0) ? {display: \"none\"} : {display: \"inline-block\"}}>올리기\r\n                </button>\r\n                <button className=\"btn orangeColorBtn\"\r\n                        style={(this.state.postContents.length > 0) ? {display: \"inline-block\"} : {display: \"none\"}}\r\n                        onClick={this.postEvent}>올리기\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WritingContainer;\r\n"]},"metadata":{},"sourceType":"module"}