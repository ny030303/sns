{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\sns\\\\src\\\\Component\\\\StoryItem\\\\CommentList\\\\CommentList.js\";\nimport * as React from 'react';\nimport \"./CommentList.css\";\nimport CommentItem from \"./CommentItem/CommentItem\";\nimport { CommentWriting } from \"../../CommentWriting/CommentWriting\";\nimport { getComments } from \"../../../services/DataService\";\nexport class CommentList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onAddComment = comment => {\n      let comments = this.props.comments || [];\n      comments.push(comment);\n      this.props.onUpdateComments(comments);\n    };\n\n    this.onUpdateComment = (dataid, comment) => {\n      let comments = this.props.comments || [];\n      let idx = comments.findIndex(v => v.id === dataid);\n\n      if (idx >= 0) {\n        if (comment === null) {\n          // delete\n          comments.splice(idx, 1);\n        } else {\n          // update\n          comments[idx] = comment;\n        }\n\n        this.props.onUpdateComments(comments);\n      }\n    };\n\n    this.state = {};\n    this.input = React.createRef(); // this.loadComments();\n  }\n\n  render() {\n    // console.log(this.props.comments);\n    let comments = this.props.comments || [];\n    return React.createElement(\"div\", {\n      className: \"commentList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(CommentWriting, {\n      postid: this.props.postid,\n      type: \"normal\",\n      onAddComment: this.onAddComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      className: \"commentItemsWrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, comments.map((v, i) => React.createElement(CommentItem, {\n      key: i,\n      data: v,\n      postid: this.props.postid,\n      onUpdateComment: this.onUpdateComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }))));\n  }\n\n}\n;","map":{"version":3,"sources":["C:/xampp/htdocs/sns/src/Component/StoryItem/CommentList/CommentList.js"],"names":["React","CommentItem","CommentWriting","getComments","CommentList","Component","constructor","props","onAddComment","comment","comments","push","onUpdateComments","onUpdateComment","dataid","idx","findIndex","v","id","splice","state","input","createRef","render","postid","map","i"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,mBAAP;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAAQC,cAAR,QAA6B,qCAA7B;AACA,SAAQC,WAAR,QAA0B,+BAA1B;AAGA,OAAO,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAA0C;AAE/CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,YATmB,GASHC,OAAD,IAAa;AAC1B,UAAIC,QAAQ,GAAG,KAAKH,KAAL,CAAWG,QAAX,IAAuB,EAAtC;AACAA,MAAAA,QAAQ,CAACC,IAAT,CAAcF,OAAd;AACA,WAAKF,KAAL,CAAWK,gBAAX,CAA4BF,QAA5B;AACD,KAbkB;;AAAA,SAenBG,eAfmB,GAeD,CAACC,MAAD,EAASL,OAAT,KAAqB;AACrC,UAAIC,QAAQ,GAAG,KAAKH,KAAL,CAAWG,QAAX,IAAuB,EAAtC;AACA,UAAIK,GAAG,GAAGL,QAAQ,CAACM,SAAT,CAAmBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASJ,MAAjC,CAAV;;AACA,UAAIC,GAAG,IAAI,CAAX,EAAe;AACb,YAAIN,OAAO,KAAK,IAAhB,EAAuB;AAAE;AACvBC,UAAAA,QAAQ,CAACS,MAAT,CAAgBJ,GAAhB,EAAqB,CAArB;AACD,SAFD,MAGK;AAAE;AACLL,UAAAA,QAAQ,CAACK,GAAD,CAAR,GAAgBN,OAAhB;AACD;;AACD,aAAKF,KAAL,CAAWK,gBAAX,CAA4BF,QAA5B;AACD;AACF,KA3BkB;;AAEjB,SAAKU,KAAL,GAAa,EAAb;AAGA,SAAKC,KAAL,GAAarB,KAAK,CAACsB,SAAN,EAAb,CALiB,CAMjB;AACD;;AAsBDC,EAAAA,MAAM,GAAG;AACP;AACA,QAAIb,QAAQ,GAAG,KAAKH,KAAL,CAAWG,QAAX,IAAuB,EAAtC;AACA,WACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,cAAD;AAAgB,MAAA,MAAM,EAAE,KAAKH,KAAL,CAAWiB,MAAnC;AAA2C,MAAA,IAAI,EAAE,QAAjD;AAA2D,MAAA,YAAY,EAAE,KAAKhB,YAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAGE;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIE,QAAQ,CAACe,GAAT,CAAa,CAACR,CAAD,EAAGS,CAAH,KACX,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,CAAlB;AAAqB,MAAA,IAAI,EAAET,CAA3B;AAA8B,MAAA,MAAM,EAAE,KAAKV,KAAL,CAAWiB,MAAjD;AAAyD,MAAA,eAAe,EAAE,KAAKX,eAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFJ,CAHF,CADF;AAaD;;AA/C8C;AAgDhD","sourcesContent":["import * as React from 'react';\r\nimport \"./CommentList.css\";\r\nimport CommentItem from \"./CommentItem/CommentItem\";\r\nimport {CommentWriting} from \"../../CommentWriting/CommentWriting\";\r\nimport {getComments} from \"../../../services/DataService\";\r\n\r\n\r\nexport class CommentList extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    };\r\n    this.input = React.createRef();\r\n    // this.loadComments();\r\n  }\r\n\r\n  onAddComment = (comment) => {\r\n    let comments = this.props.comments || [];\r\n    comments.push(comment);\r\n    this.props.onUpdateComments(comments);\r\n  };\r\n\r\n  onUpdateComment = (dataid, comment) => {\r\n    let comments = this.props.comments || [];\r\n    let idx = comments.findIndex(v => v.id === dataid);\r\n    if( idx >= 0 ) {\r\n      if( comment === null ) { // delete\r\n        comments.splice(idx, 1);\r\n      }\r\n      else { // update\r\n        comments[idx] = comment;\r\n      }\r\n      this.props.onUpdateComments(comments);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props.comments);\r\n    let comments = this.props.comments || [];\r\n    return (\r\n      <div className=\"commentList\">\r\n      <CommentWriting postid={this.props.postid} type={\"normal\"} onAddComment={this.onAddComment}/>\r\n\r\n        <ul className=\"commentItemsWrap\">\r\n          {\r\n            comments.map((v,i) => (\r\n              <CommentItem key={i} data={v} postid={this.props.postid} onUpdateComment={this.onUpdateComment}/>\r\n            ))\r\n          }\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n};"]},"metadata":{},"sourceType":"module"}