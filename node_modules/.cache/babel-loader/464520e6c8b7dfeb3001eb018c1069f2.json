{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\sns\\\\src\\\\Routes\\\\MainStory\\\\MainStory.js\";\nimport React from 'react';\nimport './MainStory.css';\nimport WritingContainer from \"../../Component/WritingContainer/WritingContainer\";\nimport StoryItem from \"../../Component/StoryItem/StoryItem\";\nimport { deletePost, getComments, getPost, setStoryUserData } from \"../../services/DataService\";\nimport eventService from \"../../services/EventService\";\nimport { ModalWritingContainer } from \"../../Component/ModalWritingContainer/ModalWritingContainer\";\nimport { LoadingIndicator } from \"../../services/LoadingIndicator\";\nimport waitDialog from \"../../services/WaitDialog\";\n\nclass MainStory extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getPostEvent = () => {\n      getPost(this.state.userInfo.id, data => {\n        // console.log(data);\n        if (data.posts !== undefined) {\n          // console.log(this);\n          let arr = data.posts.sort((a, b) => new Date(b.created).getTime() - new Date(a.created).getTime());\n          this.setState({\n            postList: data.posts,\n            userList: data.users\n          }); // this.render();\n\n          console.log(data.users);\n\n          try {\n            data.users.forEach(uv => {\n              // console.log(uv);\n              setStoryUserData(uv.userid, uv.name, uv.profileimg);\n            });\n          } catch (e) {\n            console.log(e);\n          }\n\n          let posts = this.state.postList; // console.log(posts);\n\n          posts.forEach(v => {\n            getComments(v.id, cData => {\n              // console.log(\"loadComments:\", cData);\n              v.comments = cData.data;\n\n              v.onUpdateComments = comments => {\n                let postData = this.state.postList;\n                postData.find(fv => fv.id === v.id).comments = comments;\n                this.setState({\n                  postList: postData\n                });\n              };\n\n              this.setState({\n                postList: posts\n              });\n            });\n          });\n        }\n      });\n    };\n\n    this.updatePostEvent = e => {\n      let postid = e.target.dataset.num;\n      let editPost = this.state.postList.find(v => v.id === postid);\n      eventService.emitEvent(\"editPostToMyHeader\", editPost);\n    };\n\n    this.deletePostEvent = e => {\n      let postid = e.target.dataset.num;\n      console.log('postid:', postid, this.state.postList);\n      deletePost(postid, res => {\n        if (res.result == 1) {\n          // this.getPostEvent();\n          this.setState({\n            postList: this.state.postList.filter(v => postid !== v.id)\n          });\n        }\n\n        console.log('result:', res.result, this.state.postList);\n      });\n    };\n\n    this.state = {\n      userInfo: JSON.parse(localStorage.getItem(\"userInfo\")),\n      postList: [],\n      userList: [],\n      isModalWritingContainerOn: false,\n      viewCnt: 5,\n      loading: false\n    };\n    eventService.listenEvent(\"reloadStorys\", res => {\n      console.log(res);\n      this.getPostEvent();\n    });\n    if (this.state.userInfo !== undefined) this.getPostEvent();\n  }\n\n  componentDidMount() {\n    eventService.listenEvent(\"updatePostToMainStory\", postData => {\n      let posts = this.state.postList;\n      let idx = posts.findIndex(v => v.id === postData.id);\n      console.log(postData, posts[idx]);\n      posts[idx] = postData;\n      this.setState({\n        postList: posts\n      });\n    });\n    eventService.listenEvent(\"updateIsPrivateNumToMainStory\", isPrivateNumData => {\n      let posts = this.state.postList;\n      let idx = posts.findIndex(v => v.id === isPrivateNumData.postid);\n      console.log(isPrivateNumData, posts[idx]); // posts[idx] = postData;\n      // this.setState({postList: posts});\n    });\n    window.addEventListener('scroll', e => {\n      const _document$documentEle = document.documentElement,\n            scrollTop = _document$documentEle.scrollTop,\n            scrollHeight = _document$documentEle.scrollHeight,\n            clientHeight = _document$documentEle.clientHeight;\n\n      if (scrollTop + clientHeight >= scrollHeight) {\n        setTimeout(() => {\n          this.setState({\n            loading: false,\n            viewCnt: this.state.viewCnt + 5\n          });\n        }, 1000);\n\n        if (this.state.viewCnt < this.state.postList.length) {\n          this.setState({\n            loading: true\n          });\n        }\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevState.state && this.state.postList !== prevState.state.postList) {\n      console.log(this.state.postList, prevState.state.postList);\n      this.getPostEvent();\n    }\n  }\n\n  render() {\n    //console.log(this.state.postList);\n    return React.createElement(\"div\", {\n      className: \"mainStory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"article_story\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(WritingContainer, {\n      getPostEvent: this.getPostEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"feed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.state.postList.map((v, i) => i < this.state.viewCnt ? React.createElement(StoryItem, {\n      key: i,\n      postData: v,\n      arrnum: i,\n      userData: this.state.userList,\n      updatePostEvent: this.updatePostEvent,\n      deletePostEvent: this.deletePostEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }) : null), this.state.loading ? React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\",\n        margin: \"30px 0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"spinner-border text-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })) : React.createElement(LoadingIndicator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default MainStory;","map":{"version":3,"sources":["C:/xampp/htdocs/sns/src/Routes/MainStory/MainStory.js"],"names":["React","WritingContainer","StoryItem","deletePost","getComments","getPost","setStoryUserData","eventService","ModalWritingContainer","LoadingIndicator","waitDialog","MainStory","Component","constructor","props","getPostEvent","state","userInfo","id","data","posts","undefined","arr","sort","a","b","Date","created","getTime","setState","postList","userList","users","console","log","forEach","uv","userid","name","profileimg","e","v","cData","comments","onUpdateComments","postData","find","fv","updatePostEvent","postid","target","dataset","num","editPost","emitEvent","deletePostEvent","res","result","filter","JSON","parse","localStorage","getItem","isModalWritingContainerOn","viewCnt","loading","listenEvent","componentDidMount","idx","findIndex","isPrivateNumData","window","addEventListener","document","documentElement","scrollTop","scrollHeight","clientHeight","setTimeout","length","componentDidUpdate","prevProps","prevState","snapshot","render","map","i","textAlign","margin"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './MainStory.css';\r\nimport WritingContainer from \"../../Component/WritingContainer/WritingContainer\";\r\nimport StoryItem from \"../../Component/StoryItem/StoryItem\";\r\nimport {deletePost, getComments, getPost, setStoryUserData} from \"../../services/DataService\";\r\nimport eventService from \"../../services/EventService\";\r\nimport {ModalWritingContainer} from \"../../Component/ModalWritingContainer/ModalWritingContainer\";\r\nimport {LoadingIndicator} from \"../../services/LoadingIndicator\";\r\nimport waitDialog from \"../../services/WaitDialog\";\r\n\r\nclass MainStory extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userInfo: JSON.parse(localStorage.getItem(\"userInfo\")),\r\n      postList: [],\r\n      userList: [],\r\n      isModalWritingContainerOn: false,\r\n      viewCnt: 5,\r\n      loading: false\r\n    };\r\n\r\n    eventService.listenEvent(\"reloadStorys\", (res) => {\r\n      console.log(res);\r\n      this.getPostEvent();\r\n    });\r\n\r\n    if (this.state.userInfo !== undefined) this.getPostEvent();\r\n\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    eventService.listenEvent(\"updatePostToMainStory\", (postData) => {\r\n      let posts = this.state.postList;\r\n      let idx = posts.findIndex(v => v.id === postData.id);\r\n      console.log(postData, posts[idx]);\r\n      posts[idx] = postData;\r\n      this.setState({postList: posts});\r\n    });\r\n\r\n    eventService.listenEvent(\"updateIsPrivateNumToMainStory\", (isPrivateNumData) => {\r\n      let posts = this.state.postList;\r\n      let idx = posts.findIndex(v => v.id === isPrivateNumData.postid);\r\n      console.log(isPrivateNumData, posts[idx]);\r\n      // posts[idx] = postData;\r\n      // this.setState({postList: posts});\r\n    });\r\n\r\n    window.addEventListener('scroll', (e) => {\r\n      const {scrollTop, scrollHeight, clientHeight} = document.documentElement;\r\n      if ((scrollTop + clientHeight) >= scrollHeight) {\r\n        setTimeout(() => {\r\n          this.setState({loading: false, viewCnt: this.state.viewCnt + 5});\r\n        }, 1000);\r\n        if(this.state.viewCnt < this.state.postList.length) {\r\n          this.setState({loading: true});\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if(prevState.state && this.state.postList !== prevState.state.postList) {\r\n      console.log(this.state.postList, prevState.state.postList);\r\n      this.getPostEvent();\r\n    }\r\n  }\r\n\r\n  getPostEvent = () => {\r\n    getPost(this.state.userInfo.id, (data) => {\r\n      // console.log(data);\r\n      if (data.posts !== undefined) {\r\n        // console.log(this);\r\n        let arr = data.posts.sort((a, b) => new Date(b.created).getTime() - new Date(a.created).getTime());\r\n        this.setState({postList: data.posts, userList: data.users});\r\n        // this.render();\r\n        console.log(data.users);\r\n        try {\r\n          data.users.forEach(uv => {\r\n            // console.log(uv);\r\n            setStoryUserData(uv.userid, uv.name, uv.profileimg);\r\n          });\r\n        }\r\n        catch(e){\r\n          console.log(e);\r\n        }\r\n\r\n        let posts = this.state.postList;\r\n        // console.log(posts);\r\n        posts.forEach(v => {\r\n          getComments(v.id, (cData) => {\r\n            // console.log(\"loadComments:\", cData);\r\n            v.comments = cData.data;\r\n            v.onUpdateComments = (comments) => {\r\n              let postData = this.state.postList;\r\n              postData.find(fv => fv.id === v.id).comments = comments;\r\n              this.setState({postList: postData});\r\n            };\r\n            this.setState({postList: posts});\r\n          });\r\n        });\r\n      }\r\n    })\r\n  };\r\n\r\n\r\n  updatePostEvent = (e) => {\r\n    let postid = e.target.dataset.num;\r\n    let editPost = this.state.postList.find(v => v.id === postid);\r\n    eventService.emitEvent(\"editPostToMyHeader\", editPost);\r\n  };\r\n\r\n  deletePostEvent = (e) => {\r\n    let postid = e.target.dataset.num;\r\n    console.log('postid:', postid, this.state.postList);\r\n    deletePost(postid, (res) => {\r\n      if(res.result == 1) {\r\n        // this.getPostEvent();\r\n        this.setState({postList: this.state.postList.filter(v => postid !== v.id)})\r\n      }\r\n      console.log('result:', res.result, this.state.postList);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    //console.log(this.state.postList);\r\n    return (\r\n      <div className=\"mainStory\">\r\n        <div className=\"article_story\">\r\n          <WritingContainer getPostEvent={this.getPostEvent}/>\r\n          <div className=\"feed\">\r\n\r\n            {\r\n              this.state.postList.map((v, i) => (i < this.state.viewCnt) ? (\r\n                  <StoryItem key={i} postData={v} arrnum={i} userData={this.state.userList}\r\n                             updatePostEvent={this.updatePostEvent} deletePostEvent={this.deletePostEvent}/>\r\n                ) : null\r\n              )\r\n            }\r\n            {\r\n              (this.state.loading) ? (<div style={{textAlign: \"center\", margin: \"30px 0\"}}>\r\n                <div className=\"spinner-border text-warning\"/>\r\n              </div>) : (<LoadingIndicator/>)\r\n            }\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MainStory;\r\n"]},"metadata":{},"sourceType":"module"}