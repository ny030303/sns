{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\sns\\\\src\\\\Routes\\\\UserStory\\\\UserStory.js\";\nimport React from 'react';\nimport './UserStory.css';\nimport StoryItem from \"../../Component/StoryItem/StoryItem\";\nimport FriendItem from \"../../Component/FriendItem/FriendItem\";\nimport { getUserInfo, updateUserProfileImg, updateUserBgImg, getUserPosts, getUserFriends, setStoryUserData, getComments, deletePost } from \"../../services/DataService\";\nimport { fileToDataURL } from \"../../services/fileToDataURL\";\nimport eventService from \"../../services/EventService\";\nimport { MyMenu } from \"../../Component/MyMenu/MyMenu\";\nimport { LoadingIndicator } from \"../../services/LoadingIndicator\";\nimport { ProfileSettingItem } from \"../../Component/ProfileSettingItem/ProfileSettingItem\";\n\nclass UserStory extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.reloadLoginUserFriends = () => {\n      getUserFriends(this.nowUserInfo.id, data => {\n        this.setState({\n          isFriend: false\n        });\n        data.friends.forEach((v, i) => {\n          if (this.props.match.params.userId === v.friend) {\n            this.setState({\n              isFriend: true\n            });\n          }\n        });\n      });\n    };\n\n    this.loadUserInfo = () => {\n      getUserInfo(this.props.match.params.userId, udata => {\n        this.getPostEvent(); // 바꿔야 함... 여긴 항상 로그인 유저만 오는 것이 아님. <= (바꿈)\n\n        if (this.nowUserInfo.id === this.props.match.params.userId) {\n          localStorage.setItem(\"userInfo\", JSON.stringify(udata.data));\n          eventService.emitEvent(\"changeUserProfile\");\n        }\n      });\n    };\n\n    this.getPostEvent = () => {\n      getUserPosts(this.props.match.params.userId, data => {\n        // console.log(data);\n        if (data.posts !== undefined) {\n          let arr = data.posts.sort((a, b) => new Date(b.created).getTime() - new Date(a.created).getTime());\n\n          if (this.nowUserInfo.id !== this.props.match.params.userId) {\n            arr = arr.filter(v => Number(v.isprivate_num) !== 1); // console.log(arr);\n          }\n\n          this.setState({\n            postList: arr,\n            posterInfo: data.user\n          });\n          setStoryUserData(data.user.userid, data.user.name, data.user.profileimg);\n          let posts = this.state.postList;\n          posts.forEach(v => {\n            getComments(v.id, cData => {\n              // console.log(\"loadComments:\", cData);\n              v.comments = cData.data;\n\n              v.onUpdateComments = comments => {\n                let postData = this.state.postList;\n                postData.find(fv => fv.id === v.id).comments = comments;\n                this.setState({\n                  postList: postData\n                });\n              };\n\n              this.setState({\n                postList: posts\n              });\n            });\n          });\n        }\n      });\n    };\n\n    this.updatePostEvent = e => {\n      let postid = e.target.dataset.num;\n      let editPost = this.state.postList.find(v => v.id === postid);\n      eventService.emitEvent(\"editPostToMyHeader\", editPost);\n    };\n\n    this.deletePostEvent = e => {\n      let postid = e.target.dataset.num;\n      console.log('postid:', postid, this.state.postList);\n      deletePost(postid, res => {\n        if (res.result == 1) {\n          // this.getPostEvent();\n          this.setState({\n            postList: this.state.postList.filter(v => postid !== v.id)\n          });\n        }\n\n        console.log('result:', res.result, this.state.postList);\n      });\n    };\n\n    this.storyLinkEvent = e => {\n      this.setState({\n        selectedMenuIdx: Number(e.target.dataset.midx)\n      });\n\n      switch (Number(e.target.dataset.midx)) {\n        case 0:\n          this.props.history.push(`/story/${this.props.match.params.userId}/main`);\n          break;\n\n        case 1:\n          this.props.history.push(`/story/${this.props.match.params.userId}/calendar`);\n          break;\n\n        case 2:\n          this.props.history.push(`/story/${this.props.match.params.userId}/images`);\n          break;\n      } // console.log(this.state.selectedMenuIdx);\n\n    };\n\n    this.showBgMenu = () => this.setState({\n      isBgMenuFade: !this.state.isBgMenuFade\n    });\n\n    this.changeUserProfileImg = e => {\n      fileToDataURL(e.target.files[0]).then(res => {\n        updateUserProfileImg({\n          userid: JSON.parse(localStorage.getItem(\"userInfo\")).id,\n          img: res\n        }, () => {\n          this.loadUserInfo();\n        });\n      });\n    };\n\n    this.changeUserBgImg = () => {\n      // console.log(\"changeUserBgImg\");\n      let randomNum = Math.floor(Math.random() * (25 - 10) + 10);\n      updateUserBgImg({\n        userid: JSON.parse(localStorage.getItem(\"userInfo\")).id,\n        img: `/images/userBackground/bg${randomNum}.jpg`\n      }, () => {\n        this.loadUserInfo();\n      });\n    };\n\n    this.selectRandomBgImg = e => {\n      // console.log(\"selectRandomBgImg: \", e);\n      console.log(e.target.files);\n      fileToDataURL(e.target.files[0]).then(res => {\n        updateUserBgImg({\n          userid: JSON.parse(localStorage.getItem(\"userInfo\")).id,\n          img: res\n        }, () => {\n          this.loadUserInfo();\n        });\n      });\n    };\n\n    this.state = {\n      selectedMenuIdx: 0,\n      posterInfo: null,\n      isBgMenuFade: false,\n      postList: [],\n      sideMemoFixed: false,\n      viewCnt: 5,\n      loading: false,\n      loginUserFriendsList: [],\n      isFriend: false,\n      infoType: this.props.match.params.type\n    }; // console.log(props.match.params.userId);\n\n    this.nowUserInfo = JSON.parse(localStorage.getItem(\"userInfo\")); // this.loadUserInfo();\n    // this.getPostEvent();\n\n    this.reloadLoginUserFriends();\n    document.addEventListener(\"scroll\", e => {\n      // console.log(e);\n      if (window.scrollY >= 364) {\n        this.setState({\n          sideMemoFixed: true\n        });\n      } else {\n        this.setState({\n          sideMemoFixed: false\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.loadUserInfo();\n    this.getPostEvent();\n    window.addEventListener('scroll', e => {\n      const _document$documentEle = document.documentElement,\n            scrollTop = _document$documentEle.scrollTop,\n            scrollHeight = _document$documentEle.scrollHeight,\n            clientHeight = _document$documentEle.clientHeight;\n\n      if (scrollTop + clientHeight >= scrollHeight) {\n        setTimeout(() => {\n          this.setState({\n            loading: false,\n            viewCnt: this.state.viewCnt + 5\n          });\n        }, 1000);\n\n        if (this.state.viewCnt < this.state.postList.length) {\n          this.setState({\n            loading: true\n          });\n        }\n      }\n    });\n    eventService.listenEvent(\"updateIsPrivateNumToMainAndUserStory\", isPrivateNumData => {\n      let posts = this.state.postList;\n      let idx = posts.findIndex(v => v.id === isPrivateNumData.postid);\n      console.log(isPrivateNumData, posts[idx]);\n      if (posts[idx].isprivate_num) posts[idx].isprivate_num = isPrivateNumData.isprivate_num; // posts[idx] = postData;\n\n      this.setState({\n        postList: posts\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // console.log(this.props.match.params, prevProps.match.params);\n    // console.log(prevProps.match.params.type, this.props.match.params);\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\n      this.loadUserInfo();\n      this.getPostEvent();\n      this.reloadLoginUserFriends();\n    }\n\n    if (this.props.match.params.type !== prevProps.match.params.type) {\n      this.setState({\n        infoType: this.props.match.params.type\n      }); // console.log(this.state.infoType);\n    }\n  }\n\n  render() {\n    if (this.state.posterInfo == null) return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }); // console.log(this.state.posterInfo);\n\n    const menus = [\"전체\", \"캘린더\", \"사진\", \"동영상\", \"장소\", \"뮤직\", \"더보기+6\"];\n\n    const menuClass = i => `story_link ${i === this.state.selectedMenuIdx ? \"story_link_on\" : \"\"}`;\n\n    const _this$state = this.state,\n          posterInfo = _this$state.posterInfo,\n          postList = _this$state.postList,\n          sideMemoFixed = _this$state.sideMemoFixed,\n          infoType = _this$state.infoType,\n          isFriend = _this$state.isFriend; // console.log(postList);\n\n    return React.createElement(\"div\", {\n      className: \"userStory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"article_story\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"story_cover\",\n      style: {\n        backgroundImage: `url(${posterInfo.backimg == null ? `/images/userBackground/bg10.jpg` : posterInfo.backimg})`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"story_cover_img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"bg_cover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"cover_cont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"info_pf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, posterInfo.profileimg ? React.createElement(\"div\", {\n      className: \"link_pf userProfileImg\",\n      style: {\n        backgroundImage: `url(${posterInfo.profileimg})`\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: \"link_pf bg_pf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }), this.nowUserInfo.id === this.props.match.params.userId ? React.createElement(\"div\", {\n      className: \"filebox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"story_img_file\",\n      className: \"ico_ks ico_pf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"file\",\n      id: \"story_img_file\",\n      onChange: this.changeUserProfileImg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    })) : null, React.createElement(\"div\", {\n      className: \"userStoryName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, posterInfo.name), React.createElement(\"p\", {\n      className: \"userStoryMemo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, posterInfo.memo)), React.createElement(\"div\", {\n      className: \"menu_story\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"story_list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, menus.map((menu, i) => React.createElement(\"li\", {\n      key: i,\n      onClick: this.storyLinkEvent,\n      \"data-midx\": i,\n      className: menuClass(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, menu))), React.createElement(\"div\", {\n      className: \"info_btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, this.nowUserInfo.id === this.props.match.params.userId ? React.createElement(\"div\", {\n      className: \"btn_cover\",\n      onClick: this.showBgMenu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"\\uBC30\\uACBD \\uC0AC\\uC9C4 \\uD3B8\\uC9D1\") : isFriend ? React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"btn_friend_cover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"\\uCE5C\\uAD6C\"), React.createElement(\"div\", {\n      className: \"area_ico\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ico_ks ico_open\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }))) : React.createElement(\"div\", {\n      className: \"btn_cover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"\\uCE5C\\uAD6C\\uC2E0\\uCCAD\"), this.state.isBgMenuFade ? React.createElement(MyMenu, {\n      menuInfo: [{\n        text: \"사진 업로드\",\n        type: \"file\",\n        eventCallback: this.selectRandomBgImg\n      }, {\n        text: \"기본 이미지\",\n        type: \"normal\",\n        eventCallback: e => this.changeUserBgImg(e)\n      }],\n      menuStyle: {\n        marginTop: \"35px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }) : null)))), React.createElement(\"div\", {\n      className: \"story_cont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"story_post_wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, infoType === \"main\" ? this.state.postList.map((v, i) => i < this.state.viewCnt ? React.createElement(StoryItem, {\n      key: i,\n      postData: v,\n      arrnum: i,\n      userData: [{\n        userid: posterInfo.id,\n        name: posterInfo.name,\n        profileimg: posterInfo.profileimg\n      }],\n      updatePostEvent: this.updatePostEvent,\n      deletePostEvent: this.deletePostEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }) : null) : infoType === \"profileSetting\" ? React.createElement(ProfileSettingItem, {\n      loadUserInfo: this.loadUserInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }) : null //updatePostEvent={this.updatePostEvent} deletePostEvent={this.deletePostEvent}\n    , infoType === \"main\" ? this.state.loading ? React.createElement(\"div\", {\n      style: {\n        textAlign: \"center\",\n        margin: \"30px 0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"spinner-border text-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    })) : React.createElement(LoadingIndicator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }) : null), React.createElement(\"div\", {\n      className: \"story_widgets\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"testStyle\",\n      style: sideMemoFixed ? {\n        position: \"fixed\",\n        top: \"79px\"\n      } : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"section_widgets\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"tit_widgets\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"\\uC815\\uBCF4 \", React.createElement(\"span\", {\n      className: \"ico_ks ico_more\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"\\uCC44\\uB110\\uC815\\uBCF4 \\uB354\\uBCF4\\uAE30\")), React.createElement(\"div\", {\n      className: \"list_info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"subtit_info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ico_ks ico_birthday\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"tit_info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \"\\uC0DD\\uC77C\"), React.createElement(\"div\", {\n      className: \"desc_info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, posterInfo.birth)), React.createElement(\"div\", {\n      className: \"subtit_info tit_story\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"ico_ks ico_story\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"tit_info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"\\uC2A4\\uD1A0\\uB9AC\"), React.createElement(\"div\", {\n      className: \"desc_info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, postList.length)), React.createElement(\"div\", {\n      className: \"subtit_info tit_qna\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"tit_info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, \"\\uC815\\uBCF4 \\uB354\\uBCF4\\uAE30\"), React.createElement(\"span\", {\n      className: \"ico_ks ico_plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"section_widgets\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"tit_widgets\",\n      style: {\n        paddingTop: \"15px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, \"\\uCD5C\\uADFC \\uD0A4\\uC6CC\\uB4DC \"), React.createElement(\"div\", {\n      className: \"keyword_widgets\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"link_keyword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, \"#\\uD0A4\\uC6CC\\uB4DC\"), React.createElement(\"p\", {\n      className: \"link_keyword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, \"#\\uD0A4\\uD0A4\\uC6CC\\uB4DC\"), React.createElement(\"p\", {\n      className: \"link_keyword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, \"#\\uD0A4\\uD0A4\\uD0A4\\uC6CC\\uB4DC\"))), React.createElement(\"div\", {\n      className: \"section_widgets\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"tit_widgets\",\n      style: {\n        paddingTop: \"15px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, \"\\uCD94\\uCC9C\\uCE5C\\uAD6C\"), React.createElement(\"div\", {\n      className: \"keyword_widgets\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default UserStory;","map":{"version":3,"sources":["C:/xampp/htdocs/sns/src/Routes/UserStory/UserStory.js"],"names":["React","StoryItem","FriendItem","getUserInfo","updateUserProfileImg","updateUserBgImg","getUserPosts","getUserFriends","setStoryUserData","getComments","deletePost","fileToDataURL","eventService","MyMenu","LoadingIndicator","ProfileSettingItem","UserStory","Component","constructor","props","reloadLoginUserFriends","nowUserInfo","id","data","setState","isFriend","friends","forEach","v","i","match","params","userId","friend","loadUserInfo","udata","getPostEvent","localStorage","setItem","JSON","stringify","emitEvent","posts","undefined","arr","sort","a","b","Date","created","getTime","filter","Number","isprivate_num","postList","posterInfo","user","userid","name","profileimg","state","cData","comments","onUpdateComments","postData","find","fv","updatePostEvent","e","postid","target","dataset","num","editPost","deletePostEvent","console","log","res","result","storyLinkEvent","selectedMenuIdx","midx","history","push","showBgMenu","isBgMenuFade","changeUserProfileImg","files","then","parse","getItem","img","changeUserBgImg","randomNum","Math","floor","random","selectRandomBgImg","sideMemoFixed","viewCnt","loading","loginUserFriendsList","infoType","type","document","addEventListener","window","scrollY","componentDidMount","documentElement","scrollTop","scrollHeight","clientHeight","setTimeout","length","listenEvent","isPrivateNumData","idx","findIndex","componentDidUpdate","prevProps","prevState","snapshot","render","menus","menuClass","backgroundImage","backimg","memo","map","menu","text","eventCallback","marginTop","textAlign","margin","position","top","birth","paddingTop"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './UserStory.css';\r\nimport StoryItem from \"../../Component/StoryItem/StoryItem\";\r\nimport FriendItem from \"../../Component/FriendItem/FriendItem\";\r\nimport {\r\n  getUserInfo,\r\n  updateUserProfileImg,\r\n  updateUserBgImg,\r\n  getUserPosts,\r\n  getUserFriends, setStoryUserData, getComments, deletePost\r\n} from \"../../services/DataService\";\r\nimport {fileToDataURL} from \"../../services/fileToDataURL\";\r\nimport eventService from \"../../services/EventService\";\r\nimport {MyMenu} from \"../../Component/MyMenu/MyMenu\";\r\nimport {LoadingIndicator} from \"../../services/LoadingIndicator\";\r\nimport {ProfileSettingItem} from \"../../Component/ProfileSettingItem/ProfileSettingItem\";\r\n\r\nclass UserStory extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedMenuIdx: 0,\r\n      posterInfo: null,\r\n      isBgMenuFade: false,\r\n      postList: [],\r\n      sideMemoFixed: false,\r\n      viewCnt: 5,\r\n      loading: false,\r\n      loginUserFriendsList: [],\r\n      isFriend: false,\r\n\r\n      infoType: this.props.match.params.type\r\n    };\r\n    // console.log(props.match.params.userId);\r\n    this.nowUserInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\r\n    // this.loadUserInfo();\r\n    // this.getPostEvent();\r\n    this.reloadLoginUserFriends();\r\n    document.addEventListener(\"scroll\", e => {\r\n      // console.log(e);\r\n      if (window.scrollY >= 364) {\r\n        this.setState({sideMemoFixed: true});\r\n      } else {\r\n        this.setState({sideMemoFixed: false});\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadUserInfo();\r\n    this.getPostEvent();\r\n    window.addEventListener('scroll', (e) => {\r\n      const {scrollTop, scrollHeight, clientHeight} = document.documentElement;\r\n      if ((scrollTop + clientHeight) >= scrollHeight) {\r\n        setTimeout(() => {\r\n          this.setState({loading: false, viewCnt: this.state.viewCnt + 5});\r\n        }, 1000);\r\n        if(this.state.viewCnt < this.state.postList.length) {\r\n          this.setState({loading: true});\r\n        }\r\n      }\r\n    });\r\n\r\n    eventService.listenEvent(\"updateIsPrivateNumToMainAndUserStory\", (isPrivateNumData) => {\r\n      let posts = this.state.postList;\r\n      let idx = posts.findIndex(v => v.id === isPrivateNumData.postid);\r\n      console.log(isPrivateNumData, posts[idx]);\r\n      if(posts[idx].isprivate_num)  posts[idx].isprivate_num = isPrivateNumData.isprivate_num;\r\n      // posts[idx] = postData;\r\n      this.setState({postList: posts});\r\n    });\r\n  }\r\n\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    // console.log(this.props.match.params, prevProps.match.params);\r\n    // console.log(prevProps.match.params.type, this.props.match.params);\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.loadUserInfo();\r\n      this.getPostEvent();\r\n      this.reloadLoginUserFriends();\r\n    }\r\n    if(this.props.match.params.type !== prevProps.match.params.type) {\r\n      this.setState({infoType: this.props.match.params.type});\r\n      // console.log(this.state.infoType);\r\n    }\r\n  }\r\n\r\n  reloadLoginUserFriends = () => {\r\n    getUserFriends(this.nowUserInfo.id, (data) => {\r\n      this.setState({isFriend: false});\r\n      data.friends.forEach((v,i) => {\r\n        if(this.props.match.params.userId === v.friend) {\r\n          this.setState({isFriend: true});\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n  loadUserInfo = () => {\r\n    getUserInfo(this.props.match.params.userId, (udata) => {\r\n      this.getPostEvent();\r\n      // 바꿔야 함... 여긴 항상 로그인 유저만 오는 것이 아님. <= (바꿈)\r\n      if (this.nowUserInfo.id === this.props.match.params.userId) {\r\n        localStorage.setItem(\"userInfo\", JSON.stringify(udata.data));\r\n        eventService.emitEvent(\"changeUserProfile\");\r\n      }\r\n    });\r\n  };\r\n\r\n  getPostEvent = () => {\r\n    getUserPosts(this.props.match.params.userId, (data) => {\r\n      // console.log(data);\r\n      if (data.posts !== undefined) {\r\n        let arr = data.posts.sort((a, b) => new Date(b.created).getTime() - new Date(a.created).getTime());\r\n        if(this.nowUserInfo.id !== this.props.match.params.userId) {\r\n          arr = arr.filter(v => Number(v.isprivate_num) !== 1);\r\n          // console.log(arr);\r\n        }\r\n        this.setState({postList: arr, posterInfo: data.user});\r\n        setStoryUserData(data.user.userid, data.user.name, data.user.profileimg);\r\n\r\n        let posts = this.state.postList;\r\n        posts.forEach(v => {\r\n          getComments(v.id, (cData) => {\r\n            // console.log(\"loadComments:\", cData);\r\n            v.comments = cData.data;\r\n            v.onUpdateComments = (comments) => {\r\n              let postData = this.state.postList;\r\n              postData.find(fv => fv.id === v.id).comments = comments;\r\n              this.setState({postList: postData});\r\n            };\r\n            this.setState({postList: posts});\r\n          });\r\n        });\r\n\r\n      }\r\n    });\r\n  };\r\n\r\n  updatePostEvent = (e) => {\r\n    let postid = e.target.dataset.num;\r\n    let editPost = this.state.postList.find(v => v.id === postid);\r\n    eventService.emitEvent(\"editPostToMyHeader\", editPost);\r\n  };\r\n\r\n  deletePostEvent = (e) => {\r\n    let postid = e.target.dataset.num;\r\n    console.log('postid:', postid, this.state.postList);\r\n    deletePost(postid, (res) => {\r\n      if(res.result == 1) {\r\n        // this.getPostEvent();\r\n        this.setState({postList: this.state.postList.filter(v => postid !== v.id)})\r\n      }\r\n      console.log('result:', res.result, this.state.postList);\r\n    });\r\n  };\r\n\r\n\r\n  storyLinkEvent = (e) => {\r\n    this.setState({selectedMenuIdx: Number(e.target.dataset.midx)});\r\n    switch (Number(e.target.dataset.midx)) {\r\n      case 0:\r\n        this.props.history.push(`/story/${this.props.match.params.userId}/main`);\r\n        break;\r\n      case 1:\r\n        this.props.history.push(`/story/${this.props.match.params.userId}/calendar`);\r\n        break;\r\n      case 2:\r\n        this.props.history.push(`/story/${this.props.match.params.userId}/images`);\r\n        break;\r\n    }\r\n    // console.log(this.state.selectedMenuIdx);\r\n  };\r\n\r\n\r\n  showBgMenu = () => this.setState({isBgMenuFade: !this.state.isBgMenuFade});\r\n\r\n  changeUserProfileImg = (e) => {\r\n    fileToDataURL(e.target.files[0]).then(res => {\r\n      updateUserProfileImg({userid: JSON.parse(localStorage.getItem(\"userInfo\")).id, img: res}, () => {\r\n        this.loadUserInfo();\r\n      });\r\n    });\r\n  };\r\n\r\n  changeUserBgImg = () => {\r\n    // console.log(\"changeUserBgImg\");\r\n    let randomNum = Math.floor(Math.random() * (25 - 10) + 10);\r\n    updateUserBgImg({\r\n      userid: JSON.parse(localStorage.getItem(\"userInfo\")).id,\r\n      img: `/images/userBackground/bg${randomNum}.jpg`\r\n    }, () => {\r\n      this.loadUserInfo();\r\n    });\r\n  };\r\n\r\n  selectRandomBgImg = (e) => {\r\n    // console.log(\"selectRandomBgImg: \", e);\r\n    console.log(e.target.files);\r\n    fileToDataURL(e.target.files[0]).then(res => {\r\n      updateUserBgImg({userid: JSON.parse(localStorage.getItem(\"userInfo\")).id, img: res}, () => {\r\n        this.loadUserInfo();\r\n      });\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    if (this.state.posterInfo == null) return (<div/>);\r\n    // console.log(this.state.posterInfo);\r\n    const menus = [\"전체\", \"캘린더\", \"사진\", \"동영상\", \"장소\", \"뮤직\", \"더보기+6\"];\r\n    const menuClass = (i) => `story_link ${i === this.state.selectedMenuIdx ? \"story_link_on\" : \"\"}`;\r\n    const {posterInfo, postList, sideMemoFixed, infoType, isFriend} = this.state;\r\n    // console.log(postList);\r\n    return (\r\n      <div className=\"userStory\">\r\n        <div className=\"article_story\">\r\n          <div className=\"story_cover\"\r\n               style={{backgroundImage: `url(${(posterInfo.backimg == null) ? `/images/userBackground/bg10.jpg` : posterInfo.backimg})`}}>\r\n            <div className=\"story_cover_img\"/>\r\n            <div className=\"bg_cover\"/>\r\n            <div className=\"cover_cont\">\r\n              <div className=\"info_pf\">\r\n                {\r\n                  (posterInfo.profileimg) ?(<div className=\"link_pf userProfileImg\"\r\n                                                  style={{backgroundImage: `url(${posterInfo.profileimg})`}}/>):  (<div className=\"link_pf bg_pf\"/>)\r\n\r\n                }\r\n                {\r\n                  (this.nowUserInfo.id === this.props.match.params.userId) ?\r\n                    (<div className=\"filebox\">\r\n                      <label htmlFor=\"story_img_file\" className=\"ico_ks ico_pf\"/>\r\n                      <input type=\"file\" id=\"story_img_file\" onChange={this.changeUserProfileImg}/>\r\n                    </div>) : null\r\n                }\r\n\r\n                <div className=\"userStoryName\">{posterInfo.name}</div>\r\n                <p className=\"userStoryMemo\">{posterInfo.memo}</p>\r\n              </div>\r\n              <div className=\"menu_story\">\r\n                <ul className=\"story_list\">\r\n                  {\r\n                    menus.map((menu, i) => (\r\n                      <li key={i} onClick={this.storyLinkEvent} data-midx={i}\r\n                          className={menuClass(i)}>\r\n                        {menu}\r\n                      </li>\r\n                    ))\r\n                  }\r\n                </ul>\r\n                <div className=\"info_btn\">\r\n                  {\r\n                    (this.nowUserInfo.id === this.props.match.params.userId) ?\r\n                      (<div className=\"btn_cover\" onClick={this.showBgMenu}>배경 사진 편집</div>) :\r\n                      (isFriend) ? (<>\r\n                                      <div className=\"btn_friend_cover\">친구</div>\r\n                                      <div className=\"area_ico\">\r\n                                        <span className=\"ico_ks ico_open\"/>\r\n                                      </div>\r\n                                    </>) :\r\n                        (<div className=\"btn_cover\">친구신청</div>)\r\n                  }\r\n\r\n                  {(this.state.isBgMenuFade) ? (\r\n                    <MyMenu menuInfo={[{text: \"사진 업로드\", type: \"file\", eventCallback: this.selectRandomBgImg},\r\n                      {text: \"기본 이미지\", type: \"normal\", eventCallback: (e) => this.changeUserBgImg(e)}]} menuStyle={{marginTop: \"35px\"}}/>) : null}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"story_cont\">\r\n            <div className=\"story_post_wrap\">\r\n\r\n              {\r\n                (infoType === \"main\") ?\r\n                  this.state.postList.map((v, i) => (i < this.state.viewCnt) ? (\r\n                  <StoryItem key={i} postData={v} arrnum={i}\r\n                             userData={[{userid: posterInfo.id, name: posterInfo.name, profileimg: posterInfo.profileimg}]}\r\n                             updatePostEvent={this.updatePostEvent} deletePostEvent={this.deletePostEvent}/>) : null) :\r\n                  (infoType === \"profileSetting\") ?\r\n                  (\r\n                    <ProfileSettingItem loadUserInfo={this.loadUserInfo}/>\r\n                  ) : null\r\n                //updatePostEvent={this.updatePostEvent} deletePostEvent={this.deletePostEvent}\r\n              }\r\n\r\n              {\r\n                (infoType === \"main\") ?\r\n                (this.state.loading) ? (<div style={{textAlign: \"center\", margin: \"30px 0\"}}>\r\n                  <div className=\"spinner-border text-warning\"/>\r\n                </div>) : (<LoadingIndicator/>)\r\n                  : null\r\n              }\r\n\r\n            </div>\r\n            <div className=\"story_widgets\">\r\n              <div className=\"testStyle\" style={(sideMemoFixed) ? {position: \"fixed\", top: \"79px\"} : null}>\r\n                <div className=\"section_widgets\">\r\n                  <h3 className=\"tit_widgets\">정보 <span className=\"ico_ks ico_more\">채널정보 더보기</span></h3>\r\n                  <div className=\"list_info\">\r\n                    <div className=\"subtit_info\">\r\n                      <span className=\"ico_ks ico_birthday\"/>\r\n                      <span className=\"tit_info\">생일</span>\r\n                      <div className=\"desc_info\">{posterInfo.birth}</div>\r\n                    </div>\r\n                    <div className=\"subtit_info tit_story\">\r\n                      <span className=\"ico_ks ico_story\"/>\r\n                      <span className=\"tit_info\">스토리</span>\r\n                      <div className=\"desc_info\">{postList.length}</div>\r\n                    </div>\r\n                    <div className=\"subtit_info tit_qna\">\r\n                      <span className=\"tit_info\">정보 더보기</span>\r\n                      <span className=\"ico_ks ico_plus\"/>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"section_widgets\">\r\n                  <h3 className=\"tit_widgets\" style={{paddingTop: \"15px\"}}>최근 키워드 </h3>\r\n                  <div className=\"keyword_widgets\">\r\n                    <p className=\"link_keyword\">#키워드</p>\r\n                    <p className=\"link_keyword\">#키키워드</p>\r\n                    <p className=\"link_keyword\">#키키키워드</p>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"section_widgets\">\r\n                  <h3 className=\"tit_widgets\" style={{paddingTop: \"15px\"}}>추천친구</h3>\r\n                  <div className=\"keyword_widgets\">\r\n                    {/*<FriendItem listName={\"storyWidgets\"}/>*/}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UserStory;\r\n"]},"metadata":{},"sourceType":"module"}